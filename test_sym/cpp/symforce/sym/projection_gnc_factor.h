// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: projection_gnc_residual
 *
 * Args:
 *     pts_i: Matrix31
 *     pts_j: Matrix31
 *     Pi: Matrix31
 *     Qi: Rot3
 *     Pj: Matrix31
 *     Qj: Rot3
 *     tic: Matrix31
 *     qic: Rot3
 *     inv_dep_i: Scalar
 *     weight: Scalar
 *     gnc_mu: Scalar
 *     gnc_scale: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix21
 *     jacobian: (2x19) jacobian of res wrt args Pi (3), Qi (3), Pj (3), Qj (3), tic (3), qic (3),
 *               inv_dep_i (1)
 *     hessian: (19x19) Gauss-Newton hessian for args Pi (3), Qi (3), Pj (3), Qj (3), tic (3), qic
 *              (3), inv_dep_i (1)
 *     rhs: (19x1) Gauss-Newton rhs for args Pi (3), Qi (3), Pj (3), Qj (3), tic (3), qic (3),
 *          inv_dep_i (1)
 */
template <typename Scalar>
void ProjectionGncFactor(const Eigen::Matrix<Scalar, 3, 1>& pts_i,
                         const Eigen::Matrix<Scalar, 3, 1>& pts_j,
                         const Eigen::Matrix<Scalar, 3, 1>& Pi, const sym::Rot3<Scalar>& Qi,
                         const Eigen::Matrix<Scalar, 3, 1>& Pj, const sym::Rot3<Scalar>& Qj,
                         const Eigen::Matrix<Scalar, 3, 1>& tic, const sym::Rot3<Scalar>& qic,
                         const Scalar inv_dep_i, const Scalar weight, const Scalar gnc_mu,
                         const Scalar gnc_scale, const Scalar epsilon,
                         Eigen::Matrix<Scalar, 2, 1>* const res = nullptr,
                         Eigen::Matrix<Scalar, 2, 19>* const jacobian = nullptr,
                         Eigen::Matrix<Scalar, 19, 19>* const hessian = nullptr,
                         Eigen::Matrix<Scalar, 19, 1>* const rhs = nullptr) {
  // Total ops: 1891

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _Qi = Qi.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Qj = Qj.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _qic = qic.Data();

  // Intermediate terms (394)
  const Scalar _tmp0 = std::pow(_qic[2], Scalar(2));
  const Scalar _tmp1 = -2 * _tmp0;
  const Scalar _tmp2 = std::pow(_qic[1], Scalar(2));
  const Scalar _tmp3 = 1 - 2 * _tmp2;
  const Scalar _tmp4 = _tmp1 + _tmp3;
  const Scalar _tmp5 = std::pow(_Qj[2], Scalar(2));
  const Scalar _tmp6 = -2 * _tmp5;
  const Scalar _tmp7 = std::pow(_Qj[1], Scalar(2));
  const Scalar _tmp8 = 1 - 2 * _tmp7;
  const Scalar _tmp9 = _tmp6 + _tmp8;
  const Scalar _tmp10 = 2 * _Qi[1];
  const Scalar _tmp11 = _Qi[0] * _tmp10;
  const Scalar _tmp12 = 2 * _Qi[2] * _Qi[3];
  const Scalar _tmp13 = -_tmp12;
  const Scalar _tmp14 = _tmp11 + _tmp13;
  const Scalar _tmp15 = std::pow(_qic[0], Scalar(2));
  const Scalar _tmp16 = -2 * _tmp15;
  const Scalar _tmp17 = _tmp1 + _tmp16 + 1;
  const Scalar _tmp18 = Scalar(1.0) / (inv_dep_i);
  const Scalar _tmp19 = _tmp18 * pts_i(1, 0);
  const Scalar _tmp20 = 2 * _qic[0];
  const Scalar _tmp21 = _qic[3] * _tmp20;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = 2 * _qic[1] * _qic[2];
  const Scalar _tmp24 = _tmp22 + _tmp23;
  const Scalar _tmp25 = _tmp18 * pts_i(2, 0);
  const Scalar _tmp26 = 2 * _qic[3];
  const Scalar _tmp27 = _qic[2] * _tmp26;
  const Scalar _tmp28 = _qic[1] * _tmp20;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp18 * pts_i(0, 0);
  const Scalar _tmp31 = _tmp17 * _tmp19 + _tmp24 * _tmp25 + _tmp29 * _tmp30 + tic(1, 0);
  const Scalar _tmp32 = std::pow(_Qi[2], Scalar(2));
  const Scalar _tmp33 = -2 * _tmp32;
  const Scalar _tmp34 = std::pow(_Qi[1], Scalar(2));
  const Scalar _tmp35 = 1 - 2 * _tmp34;
  const Scalar _tmp36 = _tmp33 + _tmp35;
  const Scalar _tmp37 = _qic[1] * _tmp26;
  const Scalar _tmp38 = _qic[2] * _tmp20;
  const Scalar _tmp39 = _tmp37 + _tmp38;
  const Scalar _tmp40 = -_tmp27;
  const Scalar _tmp41 = _tmp28 + _tmp40;
  const Scalar _tmp42 = _tmp19 * _tmp41 + _tmp25 * _tmp39 + _tmp30 * _tmp4 + tic(0, 0);
  const Scalar _tmp43 = _Qi[3] * _tmp10;
  const Scalar _tmp44 = 2 * _Qi[0];
  const Scalar _tmp45 = _Qi[2] * _tmp44;
  const Scalar _tmp46 = _tmp43 + _tmp45;
  const Scalar _tmp47 = _tmp16 + _tmp3;
  const Scalar _tmp48 = -_tmp37;
  const Scalar _tmp49 = _tmp38 + _tmp48;
  const Scalar _tmp50 = _tmp21 + _tmp23;
  const Scalar _tmp51 = _tmp19 * _tmp50 + _tmp25 * _tmp47 + _tmp30 * _tmp49 + tic(2, 0);
  const Scalar _tmp52 = Pi(0, 0) - Pj(0, 0) + _tmp14 * _tmp31 + _tmp36 * _tmp42 + _tmp46 * _tmp51;
  const Scalar _tmp53 = 2 * _Qj[1] * _Qj[3];
  const Scalar _tmp54 = -_tmp53;
  const Scalar _tmp55 = 2 * _Qj[0];
  const Scalar _tmp56 = _Qj[2] * _tmp55;
  const Scalar _tmp57 = _tmp54 + _tmp56;
  const Scalar _tmp58 = -_tmp43;
  const Scalar _tmp59 = _tmp45 + _tmp58;
  const Scalar _tmp60 = _Qi[2] * _tmp10;
  const Scalar _tmp61 = _Qi[3] * _tmp44;
  const Scalar _tmp62 = _tmp60 + _tmp61;
  const Scalar _tmp63 = std::pow(_Qi[0], Scalar(2));
  const Scalar _tmp64 = -2 * _tmp63;
  const Scalar _tmp65 = _tmp35 + _tmp64;
  const Scalar _tmp66 = Pi(2, 0) - Pj(2, 0) + _tmp31 * _tmp62 + _tmp42 * _tmp59 + _tmp51 * _tmp65;
  const Scalar _tmp67 = 2 * _Qj[2];
  const Scalar _tmp68 = _Qj[3] * _tmp67;
  const Scalar _tmp69 = _Qj[1] * _tmp55;
  const Scalar _tmp70 = _tmp68 + _tmp69;
  const Scalar _tmp71 = _tmp11 + _tmp12;
  const Scalar _tmp72 = _tmp33 + _tmp64 + 1;
  const Scalar _tmp73 = -_tmp61;
  const Scalar _tmp74 = _tmp60 + _tmp73;
  const Scalar _tmp75 = Pi(1, 0) - Pj(1, 0) + _tmp31 * _tmp72 + _tmp42 * _tmp71 + _tmp51 * _tmp74;
  const Scalar _tmp76 = _tmp57 * _tmp66 + _tmp70 * _tmp75;
  const Scalar _tmp77 = _tmp52 * _tmp9 + _tmp76 - tic(0, 0);
  const Scalar _tmp78 = std::pow(_Qj[0], Scalar(2));
  const Scalar _tmp79 = -2 * _tmp78;
  const Scalar _tmp80 = _tmp79 + _tmp8;
  const Scalar _tmp81 = _Qj[1] * _tmp67;
  const Scalar _tmp82 = _Qj[3] * _tmp55;
  const Scalar _tmp83 = -_tmp82;
  const Scalar _tmp84 = _tmp81 + _tmp83;
  const Scalar _tmp85 = _tmp53 + _tmp56;
  const Scalar _tmp86 = _tmp52 * _tmp85 + _tmp75 * _tmp84;
  const Scalar _tmp87 = _tmp66 * _tmp80 + _tmp86 - tic(2, 0);
  const Scalar _tmp88 = _tmp6 + _tmp79 + 1;
  const Scalar _tmp89 = _tmp81 + _tmp82;
  const Scalar _tmp90 = -_tmp68;
  const Scalar _tmp91 = _tmp69 + _tmp90;
  const Scalar _tmp92 = _tmp52 * _tmp91 + _tmp66 * _tmp89;
  const Scalar _tmp93 = _tmp75 * _tmp88 + _tmp92 - tic(1, 0);
  const Scalar _tmp94 = _tmp29 * _tmp93 + _tmp49 * _tmp87;
  const Scalar _tmp95 = _tmp4 * _tmp77 + _tmp94;
  const Scalar _tmp96 = _tmp24 * _tmp93 + _tmp39 * _tmp77;
  const Scalar _tmp97 = _tmp47 * _tmp87 + _tmp96 + epsilon;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp99 = _tmp95 * _tmp98 - pts_j(0, 0);
  const Scalar _tmp100 = _tmp41 * _tmp77 + _tmp50 * _tmp87;
  const Scalar _tmp101 = _tmp100 + _tmp17 * _tmp93;
  const Scalar _tmp102 = _tmp101 * _tmp98 - pts_j(1, 0);
  const Scalar _tmp103 = Scalar(94044.444444444496) * std::pow(_tmp102, Scalar(2)) +
                         Scalar(94044.444444444496) * std::pow(_tmp99, Scalar(2)) + epsilon;
  const Scalar _tmp104 = std::pow(_tmp103, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp105 = std::sqrt(weight);
  const Scalar _tmp106 = Scalar(1.0) / (epsilon - gnc_mu + 1);
  const Scalar _tmp107 = epsilon + std::fabs(_tmp106);
  const Scalar _tmp108 = 2 - _tmp106;
  const Scalar _tmp109 =
      _tmp108 + epsilon * (2 * std::min<Scalar>(0, (((_tmp108) > 0) - ((_tmp108) < 0))) + 1);
  const Scalar _tmp110 = std::pow(gnc_scale, Scalar(-2));
  const Scalar _tmp111 = _tmp103 * _tmp110 / _tmp107 + 1;
  const Scalar _tmp112 = (Scalar(1) / Scalar(2)) * _tmp109;
  const Scalar _tmp113 = std::sqrt(Scalar(2)) *
                         std::sqrt(Scalar(_tmp107 * (std::pow(_tmp111, _tmp112) - 1) / _tmp109));
  const Scalar _tmp114 = Scalar(306.66666666666703) * _tmp105 * _tmp113;
  const Scalar _tmp115 = _tmp104 * _tmp114;
  const Scalar _tmp116 = _tmp115 * _tmp99;
  const Scalar _tmp117 = _tmp102 * _tmp115;
  const Scalar _tmp118 = _tmp39 * _tmp9;
  const Scalar _tmp119 = _tmp47 * _tmp85;
  const Scalar _tmp120 = _tmp24 * _tmp91;
  const Scalar _tmp121 = _tmp118 + _tmp119 + _tmp120;
  const Scalar _tmp122 = std::pow(_tmp97, Scalar(-2));
  const Scalar _tmp123 = _tmp101 * _tmp122;
  const Scalar _tmp124 = _tmp17 * _tmp91;
  const Scalar _tmp125 = _tmp50 * _tmp85;
  const Scalar _tmp126 = _tmp41 * _tmp9;
  const Scalar _tmp127 = -_tmp121 * _tmp123 + _tmp98 * (_tmp124 + _tmp125 + _tmp126);
  const Scalar _tmp128 = Scalar(188088.88888888899) * _tmp102;
  const Scalar _tmp129 = _tmp4 * _tmp9;
  const Scalar _tmp130 = _tmp49 * _tmp85;
  const Scalar _tmp131 = _tmp29 * _tmp91;
  const Scalar _tmp132 = _tmp122 * _tmp95;
  const Scalar _tmp133 = -_tmp121 * _tmp132 + _tmp98 * (_tmp129 + _tmp130 + _tmp131);
  const Scalar _tmp134 = Scalar(188088.88888888899) * _tmp99;
  const Scalar _tmp135 = _tmp127 * _tmp128 + _tmp133 * _tmp134;
  const Scalar _tmp136 = (Scalar(1) / Scalar(2)) * _tmp99;
  const Scalar _tmp137 = Scalar(306.66666666666703) * _tmp104 * _tmp105 * _tmp110 *
                         std::pow(_tmp111, Scalar(_tmp112 - 1)) / _tmp113;
  const Scalar _tmp138 = _tmp136 * _tmp137;
  const Scalar _tmp139 = _tmp114 / (_tmp103 * std::sqrt(_tmp103));
  const Scalar _tmp140 = _tmp136 * _tmp139;
  const Scalar _tmp141 = _tmp115 * _tmp133 + _tmp135 * _tmp138 - _tmp135 * _tmp140;
  const Scalar _tmp142 = (Scalar(1) / Scalar(2)) * _tmp102;
  const Scalar _tmp143 = _tmp139 * _tmp142;
  const Scalar _tmp144 = _tmp137 * _tmp142;
  const Scalar _tmp145 = _tmp115 * _tmp127 - _tmp135 * _tmp143 + _tmp135 * _tmp144;
  const Scalar _tmp146 = _tmp39 * _tmp70;
  const Scalar _tmp147 = _tmp47 * _tmp84;
  const Scalar _tmp148 = _tmp24 * _tmp88;
  const Scalar _tmp149 = _tmp146 + _tmp147 + _tmp148;
  const Scalar _tmp150 = _tmp49 * _tmp84;
  const Scalar _tmp151 = _tmp4 * _tmp70;
  const Scalar _tmp152 = _tmp29 * _tmp88;
  const Scalar _tmp153 = -_tmp132 * _tmp149 + _tmp98 * (_tmp150 + _tmp151 + _tmp152);
  const Scalar _tmp154 = _tmp17 * _tmp88;
  const Scalar _tmp155 = _tmp50 * _tmp84;
  const Scalar _tmp156 = _tmp41 * _tmp70;
  const Scalar _tmp157 = -_tmp123 * _tmp149 + _tmp98 * (_tmp154 + _tmp155 + _tmp156);
  const Scalar _tmp158 = _tmp128 * _tmp157 + _tmp134 * _tmp153;
  const Scalar _tmp159 = _tmp115 * _tmp153 + _tmp138 * _tmp158 - _tmp140 * _tmp158;
  const Scalar _tmp160 = _tmp115 * _tmp157 - _tmp143 * _tmp158 + _tmp144 * _tmp158;
  const Scalar _tmp161 = _tmp47 * _tmp80;
  const Scalar _tmp162 = _tmp39 * _tmp57;
  const Scalar _tmp163 = _tmp24 * _tmp89;
  const Scalar _tmp164 = _tmp161 + _tmp162 + _tmp163;
  const Scalar _tmp165 = _tmp49 * _tmp80;
  const Scalar _tmp166 = _tmp4 * _tmp57;
  const Scalar _tmp167 = _tmp29 * _tmp89;
  const Scalar _tmp168 = -_tmp132 * _tmp164 + _tmp98 * (_tmp165 + _tmp166 + _tmp167);
  const Scalar _tmp169 = _tmp17 * _tmp89;
  const Scalar _tmp170 = _tmp50 * _tmp80;
  const Scalar _tmp171 = _tmp41 * _tmp57;
  const Scalar _tmp172 = -_tmp123 * _tmp164 + _tmp98 * (_tmp169 + _tmp170 + _tmp171);
  const Scalar _tmp173 = _tmp128 * _tmp172 + _tmp134 * _tmp168;
  const Scalar _tmp174 = _tmp115 * _tmp168 + _tmp138 * _tmp173 - _tmp140 * _tmp173;
  const Scalar _tmp175 = _tmp115 * _tmp172 - _tmp143 * _tmp173 + _tmp144 * _tmp173;
  const Scalar _tmp176 = -_tmp63;
  const Scalar _tmp177 = std::pow(_Qi[3], Scalar(2));
  const Scalar _tmp178 = -_tmp34;
  const Scalar _tmp179 = -_tmp60;
  const Scalar _tmp180 =
      _tmp31 * (_tmp176 + _tmp177 + _tmp178 + _tmp32) + _tmp51 * (_tmp179 + _tmp73);
  const Scalar _tmp181 = -_tmp177;
  const Scalar _tmp182 = _tmp181 + _tmp32;
  const Scalar _tmp183 = _tmp178 + _tmp63;
  const Scalar _tmp184 = _tmp31 * _tmp74 + _tmp51 * (_tmp182 + _tmp183);
  const Scalar _tmp185 = -_tmp11;
  const Scalar _tmp186 = _tmp31 * _tmp46 + _tmp51 * (_tmp12 + _tmp185);
  const Scalar _tmp187 = _tmp180 * _tmp89 + _tmp184 * _tmp88 + _tmp186 * _tmp91;
  const Scalar _tmp188 = _tmp180 * _tmp80 + _tmp184 * _tmp84 + _tmp186 * _tmp85;
  const Scalar _tmp189 = _tmp180 * _tmp57 + _tmp184 * _tmp70 + _tmp186 * _tmp9;
  const Scalar _tmp190 = _tmp187 * _tmp24 + _tmp188 * _tmp47 + _tmp189 * _tmp39;
  const Scalar _tmp191 =
      -_tmp132 * _tmp190 + _tmp98 * (_tmp187 * _tmp29 + _tmp188 * _tmp49 + _tmp189 * _tmp4);
  const Scalar _tmp192 =
      -_tmp123 * _tmp190 + _tmp98 * (_tmp17 * _tmp187 + _tmp188 * _tmp50 + _tmp189 * _tmp41);
  const Scalar _tmp193 = _tmp128 * _tmp192 + _tmp134 * _tmp191;
  const Scalar _tmp194 = _tmp115 * _tmp191 + _tmp138 * _tmp193 - _tmp140 * _tmp193;
  const Scalar _tmp195 = _tmp115 * _tmp192 - _tmp143 * _tmp193 + _tmp144 * _tmp193;
  const Scalar _tmp196 = -_tmp32;
  const Scalar _tmp197 = _tmp42 * (_tmp181 + _tmp196 + _tmp34 + _tmp63) + _tmp51 * _tmp59;
  const Scalar _tmp198 = _tmp42 * (_tmp179 + _tmp61) + _tmp51 * _tmp71;
  const Scalar _tmp199 = -_tmp45;
  const Scalar _tmp200 = _tmp177 + _tmp196;
  const Scalar _tmp201 = _tmp42 * (_tmp199 + _tmp58) + _tmp51 * (_tmp183 + _tmp200);
  const Scalar _tmp202 = _tmp197 * _tmp89 + _tmp198 * _tmp88 + _tmp201 * _tmp91;
  const Scalar _tmp203 = _tmp197 * _tmp57 + _tmp198 * _tmp70 + _tmp201 * _tmp9;
  const Scalar _tmp204 = _tmp197 * _tmp80 + _tmp198 * _tmp84 + _tmp201 * _tmp85;
  const Scalar _tmp205 = _tmp202 * _tmp24 + _tmp203 * _tmp39 + _tmp204 * _tmp47;
  const Scalar _tmp206 =
      -_tmp123 * _tmp205 + _tmp98 * (_tmp17 * _tmp202 + _tmp203 * _tmp41 + _tmp204 * _tmp50);
  const Scalar _tmp207 =
      -_tmp132 * _tmp205 + _tmp98 * (_tmp202 * _tmp29 + _tmp203 * _tmp4 + _tmp204 * _tmp49);
  const Scalar _tmp208 = _tmp128 * _tmp206 + _tmp134 * _tmp207;
  const Scalar _tmp209 = _tmp115 * _tmp207 + _tmp138 * _tmp208 - _tmp140 * _tmp208;
  const Scalar _tmp210 = _tmp115 * _tmp206 - _tmp143 * _tmp208 + _tmp144 * _tmp208;
  const Scalar _tmp211 = _tmp176 + _tmp34;
  const Scalar _tmp212 = _tmp14 * _tmp42 + _tmp31 * (_tmp182 + _tmp211);
  const Scalar _tmp213 = _tmp31 * (_tmp13 + _tmp185) + _tmp42 * (_tmp200 + _tmp211);
  const Scalar _tmp214 = _tmp31 * (_tmp199 + _tmp43) + _tmp42 * _tmp62;
  const Scalar _tmp215 = _tmp212 * _tmp91 + _tmp213 * _tmp88 + _tmp214 * _tmp89;
  const Scalar _tmp216 = _tmp212 * _tmp85 + _tmp213 * _tmp84 + _tmp214 * _tmp80;
  const Scalar _tmp217 = _tmp212 * _tmp9 + _tmp213 * _tmp70 + _tmp214 * _tmp57;
  const Scalar _tmp218 = _tmp215 * _tmp24 + _tmp216 * _tmp47 + _tmp217 * _tmp39;
  const Scalar _tmp219 =
      -_tmp123 * _tmp218 + _tmp98 * (_tmp17 * _tmp215 + _tmp216 * _tmp50 + _tmp217 * _tmp41);
  const Scalar _tmp220 =
      -_tmp132 * _tmp218 + _tmp98 * (_tmp215 * _tmp29 + _tmp216 * _tmp49 + _tmp217 * _tmp4);
  const Scalar _tmp221 = _tmp128 * _tmp219 + _tmp134 * _tmp220;
  const Scalar _tmp222 = _tmp115 * _tmp220 + _tmp138 * _tmp221 - _tmp140 * _tmp221;
  const Scalar _tmp223 = _tmp115 * _tmp219 - _tmp143 * _tmp221 + _tmp144 * _tmp221;
  const Scalar _tmp224 = -_tmp118 - _tmp119 - _tmp120;
  const Scalar _tmp225 = -_tmp123 * _tmp224 + _tmp98 * (-_tmp124 - _tmp125 - _tmp126);
  const Scalar _tmp226 = -_tmp132 * _tmp224 + _tmp98 * (-_tmp129 - _tmp130 - _tmp131);
  const Scalar _tmp227 = _tmp128 * _tmp225 + _tmp134 * _tmp226;
  const Scalar _tmp228 = _tmp115 * _tmp226 + _tmp138 * _tmp227 - _tmp140 * _tmp227;
  const Scalar _tmp229 = _tmp115 * _tmp225 - _tmp143 * _tmp227 + _tmp144 * _tmp227;
  const Scalar _tmp230 = -_tmp146 - _tmp147 - _tmp148;
  const Scalar _tmp231 = -_tmp123 * _tmp230 + _tmp98 * (-_tmp154 - _tmp155 - _tmp156);
  const Scalar _tmp232 = -_tmp132 * _tmp230 + _tmp98 * (-_tmp150 - _tmp151 - _tmp152);
  const Scalar _tmp233 = _tmp128 * _tmp231 + _tmp134 * _tmp232;
  const Scalar _tmp234 = _tmp115 * _tmp232 + _tmp138 * _tmp233 - _tmp140 * _tmp233;
  const Scalar _tmp235 = _tmp115 * _tmp231 - _tmp143 * _tmp233 + _tmp144 * _tmp233;
  const Scalar _tmp236 = -_tmp161 - _tmp162 - _tmp163;
  const Scalar _tmp237 = -_tmp123 * _tmp236 + _tmp98 * (-_tmp169 - _tmp170 - _tmp171);
  const Scalar _tmp238 = -_tmp132 * _tmp236 + _tmp98 * (-_tmp165 - _tmp166 - _tmp167);
  const Scalar _tmp239 = _tmp128 * _tmp237 + _tmp134 * _tmp238;
  const Scalar _tmp240 = _tmp115 * _tmp238 + _tmp138 * _tmp239 - _tmp140 * _tmp239;
  const Scalar _tmp241 = _tmp115 * _tmp237 - _tmp143 * _tmp239 + _tmp144 * _tmp239;
  const Scalar _tmp242 = -_tmp81;
  const Scalar _tmp243 = std::pow(_Qj[3], Scalar(2));
  const Scalar _tmp244 = -_tmp243;
  const Scalar _tmp245 = _tmp244 + _tmp78;
  const Scalar _tmp246 = -_tmp7;
  const Scalar _tmp247 = _tmp246 + _tmp5;
  const Scalar _tmp248 = -_tmp69;
  const Scalar _tmp249 =
      _tmp52 * (_tmp248 + _tmp68) + _tmp66 * (_tmp242 + _tmp83) + _tmp75 * (_tmp245 + _tmp247);
  const Scalar _tmp250 = -_tmp78;
  const Scalar _tmp251 = _tmp243 + _tmp250;
  const Scalar _tmp252 = _tmp66 * (_tmp247 + _tmp251) + _tmp86;
  const Scalar _tmp253 = _tmp24 * _tmp252 + _tmp249 * _tmp47;
  const Scalar _tmp254 = -_tmp123 * _tmp253 + _tmp98 * (_tmp17 * _tmp252 + _tmp249 * _tmp50);
  const Scalar _tmp255 = -_tmp132 * _tmp253 + _tmp98 * (_tmp249 * _tmp49 + _tmp252 * _tmp29);
  const Scalar _tmp256 = _tmp128 * _tmp254 + _tmp134 * _tmp255;
  const Scalar _tmp257 = _tmp115 * _tmp255 + _tmp138 * _tmp256 - _tmp140 * _tmp256;
  const Scalar _tmp258 = _tmp115 * _tmp254 - _tmp143 * _tmp256 + _tmp144 * _tmp256;
  const Scalar _tmp259 = -_tmp5;
  const Scalar _tmp260 = _tmp259 + _tmp7;
  const Scalar _tmp261 = -_tmp56;
  const Scalar _tmp262 =
      _tmp52 * (_tmp261 + _tmp54) + _tmp66 * (_tmp245 + _tmp260) + _tmp75 * (_tmp242 + _tmp82);
  const Scalar _tmp263 = _tmp52 * (_tmp243 + _tmp246 + _tmp259 + _tmp78) + _tmp76;
  const Scalar _tmp264 = _tmp262 * _tmp39 + _tmp263 * _tmp47;
  const Scalar _tmp265 = -_tmp132 * _tmp264 + _tmp98 * (_tmp262 * _tmp4 + _tmp263 * _tmp49);
  const Scalar _tmp266 = -_tmp123 * _tmp264 + _tmp98 * (_tmp262 * _tmp41 + _tmp263 * _tmp50);
  const Scalar _tmp267 = _tmp128 * _tmp266 + _tmp134 * _tmp265;
  const Scalar _tmp268 = _tmp115 * _tmp265 + _tmp138 * _tmp267 - _tmp140 * _tmp267;
  const Scalar _tmp269 = _tmp115 * _tmp266 - _tmp143 * _tmp267 + _tmp144 * _tmp267;
  const Scalar _tmp270 = _tmp75 * (_tmp251 + _tmp260) + _tmp92;
  const Scalar _tmp271 = _tmp52 * (_tmp244 + _tmp250 + _tmp5 + _tmp7) +
                         _tmp66 * (_tmp261 + _tmp53) + _tmp75 * (_tmp248 + _tmp90);
  const Scalar _tmp272 = _tmp24 * _tmp271 + _tmp270 * _tmp39;
  const Scalar _tmp273 = -_tmp132 * _tmp272 + _tmp98 * (_tmp270 * _tmp4 + _tmp271 * _tmp29);
  const Scalar _tmp274 = -_tmp123 * _tmp272 + _tmp98 * (_tmp17 * _tmp271 + _tmp270 * _tmp41);
  const Scalar _tmp275 = _tmp128 * _tmp274 + _tmp134 * _tmp273;
  const Scalar _tmp276 = _tmp115 * _tmp273 + _tmp138 * _tmp275 - _tmp140 * _tmp275;
  const Scalar _tmp277 = _tmp115 * _tmp274 - _tmp143 * _tmp275 + _tmp144 * _tmp275;
  const Scalar _tmp278 = _tmp36 * _tmp85 + _tmp59 * _tmp80 + _tmp71 * _tmp84;
  const Scalar _tmp279 = _tmp36 * _tmp91 + _tmp59 * _tmp89 + _tmp71 * _tmp88;
  const Scalar _tmp280 = _tmp36 * _tmp9 + _tmp57 * _tmp59 + _tmp70 * _tmp71 - 1;
  const Scalar _tmp281 = _tmp24 * _tmp279 + _tmp278 * _tmp47 + _tmp280 * _tmp39;
  const Scalar _tmp282 =
      -_tmp123 * _tmp281 + _tmp98 * (_tmp17 * _tmp279 + _tmp278 * _tmp50 + _tmp280 * _tmp41);
  const Scalar _tmp283 =
      -_tmp132 * _tmp281 + _tmp98 * (_tmp278 * _tmp49 + _tmp279 * _tmp29 + _tmp280 * _tmp4);
  const Scalar _tmp284 = _tmp128 * _tmp282 + _tmp134 * _tmp283;
  const Scalar _tmp285 = _tmp115 * _tmp283 + _tmp138 * _tmp284 - _tmp140 * _tmp284;
  const Scalar _tmp286 = _tmp115 * _tmp282 - _tmp143 * _tmp284 + _tmp144 * _tmp284;
  const Scalar _tmp287 = _tmp14 * _tmp85 + _tmp62 * _tmp80 + _tmp72 * _tmp84;
  const Scalar _tmp288 = _tmp14 * _tmp9 + _tmp57 * _tmp62 + _tmp70 * _tmp72;
  const Scalar _tmp289 = _tmp14 * _tmp91 + _tmp62 * _tmp89 + _tmp72 * _tmp88 - 1;
  const Scalar _tmp290 = _tmp24 * _tmp289 + _tmp287 * _tmp47 + _tmp288 * _tmp39;
  const Scalar _tmp291 =
      -_tmp132 * _tmp290 + _tmp98 * (_tmp287 * _tmp49 + _tmp288 * _tmp4 + _tmp289 * _tmp29);
  const Scalar _tmp292 =
      -_tmp123 * _tmp290 + _tmp98 * (_tmp17 * _tmp289 + _tmp287 * _tmp50 + _tmp288 * _tmp41);
  const Scalar _tmp293 = _tmp128 * _tmp292 + _tmp134 * _tmp291;
  const Scalar _tmp294 = _tmp115 * _tmp291 + _tmp138 * _tmp293 - _tmp140 * _tmp293;
  const Scalar _tmp295 = _tmp115 * _tmp292 - _tmp143 * _tmp293 + _tmp144 * _tmp293;
  const Scalar _tmp296 = _tmp46 * _tmp9 + _tmp57 * _tmp65 + _tmp70 * _tmp74;
  const Scalar _tmp297 = _tmp46 * _tmp91 + _tmp65 * _tmp89 + _tmp74 * _tmp88;
  const Scalar _tmp298 = _tmp46 * _tmp85 + _tmp65 * _tmp80 + _tmp74 * _tmp84 - 1;
  const Scalar _tmp299 = _tmp24 * _tmp297 + _tmp296 * _tmp39 + _tmp298 * _tmp47;
  const Scalar _tmp300 =
      -_tmp132 * _tmp299 + _tmp98 * (_tmp29 * _tmp297 + _tmp296 * _tmp4 + _tmp298 * _tmp49);
  const Scalar _tmp301 =
      -_tmp123 * _tmp299 + _tmp98 * (_tmp17 * _tmp297 + _tmp296 * _tmp41 + _tmp298 * _tmp50);
  const Scalar _tmp302 = _tmp128 * _tmp301 + _tmp134 * _tmp300;
  const Scalar _tmp303 = _tmp115 * _tmp300 + _tmp138 * _tmp302 - _tmp140 * _tmp302;
  const Scalar _tmp304 = _tmp115 * _tmp301 - _tmp143 * _tmp302 + _tmp144 * _tmp302;
  const Scalar _tmp305 = std::pow(_qic[3], Scalar(2));
  const Scalar _tmp306 = -_tmp305;
  const Scalar _tmp307 = -_tmp2;
  const Scalar _tmp308 = _tmp0 + _tmp15 + _tmp306 + _tmp307;
  const Scalar _tmp309 = _tmp19 * _tmp24 + _tmp25 * _tmp308;
  const Scalar _tmp310 = _tmp305 + _tmp307;
  const Scalar _tmp311 = -_tmp15;
  const Scalar _tmp312 = _tmp0 + _tmp311;
  const Scalar _tmp313 = _tmp310 + _tmp312;
  const Scalar _tmp314 = -_tmp23;
  const Scalar _tmp315 = _tmp22 + _tmp314;
  const Scalar _tmp316 = _tmp19 * _tmp313 + _tmp25 * _tmp315;
  const Scalar _tmp317 = -_tmp28;
  const Scalar _tmp318 = _tmp27 + _tmp317;
  const Scalar _tmp319 = _tmp19 * _tmp39 + _tmp25 * _tmp318;
  const Scalar _tmp320 = _tmp309 * _tmp72 + _tmp316 * _tmp74 + _tmp319 * _tmp71;
  const Scalar _tmp321 = _tmp309 * _tmp62 + _tmp316 * _tmp65 + _tmp319 * _tmp59;
  const Scalar _tmp322 = _tmp14 * _tmp309 + _tmp316 * _tmp46 + _tmp319 * _tmp36;
  const Scalar _tmp323 = _tmp320 * _tmp88 + _tmp321 * _tmp89 + _tmp322 * _tmp91;
  const Scalar _tmp324 = _tmp320 * _tmp84 + _tmp321 * _tmp80 + _tmp322 * _tmp85;
  const Scalar _tmp325 = _tmp320 * _tmp70 + _tmp321 * _tmp57 + _tmp322 * _tmp9;
  const Scalar _tmp326 = _tmp24 * _tmp323 + _tmp308 * _tmp93 + _tmp315 * _tmp87 + _tmp318 * _tmp77 +
                         _tmp324 * _tmp47 + _tmp325 * _tmp39;
  const Scalar _tmp327 =
      -_tmp132 * _tmp326 + _tmp98 * (_tmp29 * _tmp323 + _tmp324 * _tmp49 + _tmp325 * _tmp4);
  const Scalar _tmp328 =
      -_tmp123 * _tmp326 +
      _tmp98 * (_tmp17 * _tmp323 + _tmp313 * _tmp87 + _tmp324 * _tmp50 + _tmp325 * _tmp41 + _tmp96);
  const Scalar _tmp329 = _tmp128 * _tmp328 + _tmp134 * _tmp327;
  const Scalar _tmp330 = _tmp115 * _tmp327 + _tmp138 * _tmp329 - _tmp140 * _tmp329;
  const Scalar _tmp331 = _tmp115 * _tmp328 - _tmp143 * _tmp329 + _tmp144 * _tmp329;
  const Scalar _tmp332 = -_tmp0;
  const Scalar _tmp333 = _tmp15 + _tmp332;
  const Scalar _tmp334 = _tmp2 + _tmp306;
  const Scalar _tmp335 = _tmp333 + _tmp334;
  const Scalar _tmp336 = _tmp25 * _tmp49 + _tmp30 * _tmp335;
  const Scalar _tmp337 = _tmp310 + _tmp333;
  const Scalar _tmp338 = -_tmp38;
  const Scalar _tmp339 = _tmp338 + _tmp48;
  const Scalar _tmp340 = _tmp25 * _tmp337 + _tmp30 * _tmp339;
  const Scalar _tmp341 = _tmp21 + _tmp314;
  const Scalar _tmp342 = _tmp25 * _tmp29 + _tmp30 * _tmp341;
  const Scalar _tmp343 = _tmp336 * _tmp65 + _tmp340 * _tmp59 + _tmp342 * _tmp62;
  const Scalar _tmp344 = _tmp14 * _tmp342 + _tmp336 * _tmp46 + _tmp340 * _tmp36;
  const Scalar _tmp345 = _tmp336 * _tmp74 + _tmp340 * _tmp71 + _tmp342 * _tmp72;
  const Scalar _tmp346 = _tmp343 * _tmp57 + _tmp344 * _tmp9 + _tmp345 * _tmp70;
  const Scalar _tmp347 = _tmp343 * _tmp80 + _tmp344 * _tmp85 + _tmp345 * _tmp84;
  const Scalar _tmp348 = _tmp343 * _tmp89 + _tmp344 * _tmp91 + _tmp345 * _tmp88;
  const Scalar _tmp349 =
      _tmp24 * _tmp348 + _tmp337 * _tmp77 + _tmp346 * _tmp39 + _tmp347 * _tmp47 + _tmp94;
  const Scalar _tmp350 =
      -_tmp132 * _tmp349 + _tmp98 * (_tmp29 * _tmp348 + _tmp335 * _tmp87 + _tmp339 * _tmp77 +
                                     _tmp341 * _tmp93 + _tmp346 * _tmp4 + _tmp347 * _tmp49);
  const Scalar _tmp351 =
      -_tmp123 * _tmp349 + _tmp98 * (_tmp17 * _tmp348 + _tmp346 * _tmp41 + _tmp347 * _tmp50);
  const Scalar _tmp352 = _tmp128 * _tmp351 + _tmp134 * _tmp350;
  const Scalar _tmp353 = _tmp115 * _tmp350 + _tmp138 * _tmp352 - _tmp140 * _tmp352;
  const Scalar _tmp354 = _tmp142 * _tmp352;
  const Scalar _tmp355 = _tmp115 * _tmp351 + _tmp137 * _tmp354 - _tmp139 * _tmp354;
  const Scalar _tmp356 = _tmp338 + _tmp37;
  const Scalar _tmp357 = _tmp19 * _tmp356 + _tmp30 * _tmp50;
  const Scalar _tmp358 = _tmp312 + _tmp334;
  const Scalar _tmp359 = _tmp19 * _tmp358 + _tmp30 * _tmp41;
  const Scalar _tmp360 = _tmp2 + _tmp305 + _tmp311 + _tmp332;
  const Scalar _tmp361 = _tmp317 + _tmp40;
  const Scalar _tmp362 = _tmp19 * _tmp361 + _tmp30 * _tmp360;
  const Scalar _tmp363 = _tmp357 * _tmp74 + _tmp359 * _tmp71 + _tmp362 * _tmp72;
  const Scalar _tmp364 = _tmp14 * _tmp362 + _tmp357 * _tmp46 + _tmp359 * _tmp36;
  const Scalar _tmp365 = _tmp357 * _tmp65 + _tmp359 * _tmp59 + _tmp362 * _tmp62;
  const Scalar _tmp366 = _tmp363 * _tmp70 + _tmp364 * _tmp9 + _tmp365 * _tmp57;
  const Scalar _tmp367 = _tmp363 * _tmp84 + _tmp364 * _tmp85 + _tmp365 * _tmp80;
  const Scalar _tmp368 = _tmp363 * _tmp88 + _tmp364 * _tmp91 + _tmp365 * _tmp89;
  const Scalar _tmp369 = _tmp24 * _tmp368 + _tmp366 * _tmp39 + _tmp367 * _tmp47;
  const Scalar _tmp370 =
      -_tmp123 * _tmp369 + _tmp98 * (_tmp17 * _tmp368 + _tmp356 * _tmp87 + _tmp358 * _tmp77 +
                                     _tmp361 * _tmp93 + _tmp366 * _tmp41 + _tmp367 * _tmp50);
  const Scalar _tmp371 =
      -_tmp132 * _tmp369 +
      _tmp98 * (_tmp100 + _tmp29 * _tmp368 + _tmp360 * _tmp93 + _tmp366 * _tmp4 + _tmp367 * _tmp49);
  const Scalar _tmp372 = _tmp128 * _tmp370 + _tmp134 * _tmp371;
  const Scalar _tmp373 = _tmp115 * _tmp371 + _tmp138 * _tmp372 - _tmp140 * _tmp372;
  const Scalar _tmp374 = _tmp115 * _tmp370 - _tmp143 * _tmp372 + _tmp144 * _tmp372;
  const Scalar _tmp375 = std::pow(inv_dep_i, Scalar(-2));
  const Scalar _tmp376 = _tmp375 * pts_i(0, 0);
  const Scalar _tmp377 = _tmp375 * pts_i(2, 0);
  const Scalar _tmp378 = _tmp375 * pts_i(1, 0);
  const Scalar _tmp379 = -_tmp376 * _tmp4 - _tmp377 * _tmp39 - _tmp378 * _tmp41;
  const Scalar _tmp380 = -_tmp17 * _tmp378 - _tmp24 * _tmp377 - _tmp29 * _tmp376;
  const Scalar _tmp381 = -_tmp376 * _tmp49 - _tmp377 * _tmp47 - _tmp378 * _tmp50;
  const Scalar _tmp382 = _tmp14 * _tmp380 + _tmp36 * _tmp379 + _tmp381 * _tmp46;
  const Scalar _tmp383 = _tmp379 * _tmp71 + _tmp380 * _tmp72 + _tmp381 * _tmp74;
  const Scalar _tmp384 = _tmp379 * _tmp59 + _tmp380 * _tmp62 + _tmp381 * _tmp65;
  const Scalar _tmp385 = _tmp382 * _tmp9 + _tmp383 * _tmp70 + _tmp384 * _tmp57;
  const Scalar _tmp386 = _tmp382 * _tmp85 + _tmp383 * _tmp84 + _tmp384 * _tmp80;
  const Scalar _tmp387 = _tmp382 * _tmp91 + _tmp383 * _tmp88 + _tmp384 * _tmp89;
  const Scalar _tmp388 = _tmp24 * _tmp387 + _tmp385 * _tmp39 + _tmp386 * _tmp47;
  const Scalar _tmp389 =
      -_tmp132 * _tmp388 + _tmp98 * (_tmp29 * _tmp387 + _tmp385 * _tmp4 + _tmp386 * _tmp49);
  const Scalar _tmp390 =
      -_tmp123 * _tmp388 + _tmp98 * (_tmp17 * _tmp387 + _tmp385 * _tmp41 + _tmp386 * _tmp50);
  const Scalar _tmp391 = _tmp128 * _tmp390 + _tmp134 * _tmp389;
  const Scalar _tmp392 = _tmp115 * _tmp389 + _tmp138 * _tmp391 - _tmp140 * _tmp391;
  const Scalar _tmp393 = _tmp115 * _tmp390 - _tmp143 * _tmp391 + _tmp144 * _tmp391;

  // Output terms (4)
  if (res != nullptr) {
    Eigen::Matrix<Scalar, 2, 1>& _res = (*res);

    _res(0, 0) = _tmp116;
    _res(1, 0) = _tmp117;
  }

  if (jacobian != nullptr) {
    Eigen::Matrix<Scalar, 2, 19>& _jacobian = (*jacobian);

    _jacobian(0, 0) = _tmp141;
    _jacobian(1, 0) = _tmp145;
    _jacobian(0, 1) = _tmp159;
    _jacobian(1, 1) = _tmp160;
    _jacobian(0, 2) = _tmp174;
    _jacobian(1, 2) = _tmp175;
    _jacobian(0, 3) = _tmp194;
    _jacobian(1, 3) = _tmp195;
    _jacobian(0, 4) = _tmp209;
    _jacobian(1, 4) = _tmp210;
    _jacobian(0, 5) = _tmp222;
    _jacobian(1, 5) = _tmp223;
    _jacobian(0, 6) = _tmp228;
    _jacobian(1, 6) = _tmp229;
    _jacobian(0, 7) = _tmp234;
    _jacobian(1, 7) = _tmp235;
    _jacobian(0, 8) = _tmp240;
    _jacobian(1, 8) = _tmp241;
    _jacobian(0, 9) = _tmp257;
    _jacobian(1, 9) = _tmp258;
    _jacobian(0, 10) = _tmp268;
    _jacobian(1, 10) = _tmp269;
    _jacobian(0, 11) = _tmp276;
    _jacobian(1, 11) = _tmp277;
    _jacobian(0, 12) = _tmp285;
    _jacobian(1, 12) = _tmp286;
    _jacobian(0, 13) = _tmp294;
    _jacobian(1, 13) = _tmp295;
    _jacobian(0, 14) = _tmp303;
    _jacobian(1, 14) = _tmp304;
    _jacobian(0, 15) = _tmp330;
    _jacobian(1, 15) = _tmp331;
    _jacobian(0, 16) = _tmp353;
    _jacobian(1, 16) = _tmp355;
    _jacobian(0, 17) = _tmp373;
    _jacobian(1, 17) = _tmp374;
    _jacobian(0, 18) = _tmp392;
    _jacobian(1, 18) = _tmp393;
  }

  if (hessian != nullptr) {
    Eigen::Matrix<Scalar, 19, 19>& _hessian = (*hessian);

    _hessian(0, 0) = std::pow(_tmp141, Scalar(2)) + std::pow(_tmp145, Scalar(2));
    _hessian(1, 0) = _tmp141 * _tmp159 + _tmp145 * _tmp160;
    _hessian(2, 0) = _tmp141 * _tmp174 + _tmp145 * _tmp175;
    _hessian(3, 0) = _tmp141 * _tmp194 + _tmp145 * _tmp195;
    _hessian(4, 0) = _tmp141 * _tmp209 + _tmp145 * _tmp210;
    _hessian(5, 0) = _tmp141 * _tmp222 + _tmp145 * _tmp223;
    _hessian(6, 0) = _tmp141 * _tmp228 + _tmp145 * _tmp229;
    _hessian(7, 0) = _tmp141 * _tmp234 + _tmp145 * _tmp235;
    _hessian(8, 0) = _tmp141 * _tmp240 + _tmp145 * _tmp241;
    _hessian(9, 0) = _tmp141 * _tmp257 + _tmp145 * _tmp258;
    _hessian(10, 0) = _tmp141 * _tmp268 + _tmp145 * _tmp269;
    _hessian(11, 0) = _tmp141 * _tmp276 + _tmp145 * _tmp277;
    _hessian(12, 0) = _tmp141 * _tmp285 + _tmp145 * _tmp286;
    _hessian(13, 0) = _tmp141 * _tmp294 + _tmp145 * _tmp295;
    _hessian(14, 0) = _tmp141 * _tmp303 + _tmp145 * _tmp304;
    _hessian(15, 0) = _tmp141 * _tmp330 + _tmp145 * _tmp331;
    _hessian(16, 0) = _tmp141 * _tmp353 + _tmp145 * _tmp355;
    _hessian(17, 0) = _tmp141 * _tmp373 + _tmp145 * _tmp374;
    _hessian(18, 0) = _tmp141 * _tmp392 + _tmp145 * _tmp393;
    _hessian(0, 1) = 0;
    _hessian(1, 1) = std::pow(_tmp159, Scalar(2)) + std::pow(_tmp160, Scalar(2));
    _hessian(2, 1) = _tmp159 * _tmp174 + _tmp160 * _tmp175;
    _hessian(3, 1) = _tmp159 * _tmp194 + _tmp160 * _tmp195;
    _hessian(4, 1) = _tmp159 * _tmp209 + _tmp160 * _tmp210;
    _hessian(5, 1) = _tmp159 * _tmp222 + _tmp160 * _tmp223;
    _hessian(6, 1) = _tmp159 * _tmp228 + _tmp160 * _tmp229;
    _hessian(7, 1) = _tmp159 * _tmp234 + _tmp160 * _tmp235;
    _hessian(8, 1) = _tmp159 * _tmp240 + _tmp160 * _tmp241;
    _hessian(9, 1) = _tmp159 * _tmp257 + _tmp160 * _tmp258;
    _hessian(10, 1) = _tmp159 * _tmp268 + _tmp160 * _tmp269;
    _hessian(11, 1) = _tmp159 * _tmp276 + _tmp160 * _tmp277;
    _hessian(12, 1) = _tmp159 * _tmp285 + _tmp160 * _tmp286;
    _hessian(13, 1) = _tmp159 * _tmp294 + _tmp160 * _tmp295;
    _hessian(14, 1) = _tmp159 * _tmp303 + _tmp160 * _tmp304;
    _hessian(15, 1) = _tmp159 * _tmp330 + _tmp160 * _tmp331;
    _hessian(16, 1) = _tmp159 * _tmp353 + _tmp160 * _tmp355;
    _hessian(17, 1) = _tmp159 * _tmp373 + _tmp160 * _tmp374;
    _hessian(18, 1) = _tmp159 * _tmp392 + _tmp160 * _tmp393;
    _hessian(0, 2) = 0;
    _hessian(1, 2) = 0;
    _hessian(2, 2) = std::pow(_tmp174, Scalar(2)) + std::pow(_tmp175, Scalar(2));
    _hessian(3, 2) = _tmp174 * _tmp194 + _tmp175 * _tmp195;
    _hessian(4, 2) = _tmp174 * _tmp209 + _tmp175 * _tmp210;
    _hessian(5, 2) = _tmp174 * _tmp222 + _tmp175 * _tmp223;
    _hessian(6, 2) = _tmp174 * _tmp228 + _tmp175 * _tmp229;
    _hessian(7, 2) = _tmp174 * _tmp234 + _tmp175 * _tmp235;
    _hessian(8, 2) = _tmp174 * _tmp240 + _tmp175 * _tmp241;
    _hessian(9, 2) = _tmp174 * _tmp257 + _tmp175 * _tmp258;
    _hessian(10, 2) = _tmp174 * _tmp268 + _tmp175 * _tmp269;
    _hessian(11, 2) = _tmp174 * _tmp276 + _tmp175 * _tmp277;
    _hessian(12, 2) = _tmp174 * _tmp285 + _tmp175 * _tmp286;
    _hessian(13, 2) = _tmp174 * _tmp294 + _tmp175 * _tmp295;
    _hessian(14, 2) = _tmp174 * _tmp303 + _tmp175 * _tmp304;
    _hessian(15, 2) = _tmp174 * _tmp330 + _tmp175 * _tmp331;
    _hessian(16, 2) = _tmp174 * _tmp353 + _tmp175 * _tmp355;
    _hessian(17, 2) = _tmp174 * _tmp373 + _tmp175 * _tmp374;
    _hessian(18, 2) = _tmp174 * _tmp392 + _tmp175 * _tmp393;
    _hessian(0, 3) = 0;
    _hessian(1, 3) = 0;
    _hessian(2, 3) = 0;
    _hessian(3, 3) = std::pow(_tmp194, Scalar(2)) + std::pow(_tmp195, Scalar(2));
    _hessian(4, 3) = _tmp194 * _tmp209 + _tmp195 * _tmp210;
    _hessian(5, 3) = _tmp194 * _tmp222 + _tmp195 * _tmp223;
    _hessian(6, 3) = _tmp194 * _tmp228 + _tmp195 * _tmp229;
    _hessian(7, 3) = _tmp194 * _tmp234 + _tmp195 * _tmp235;
    _hessian(8, 3) = _tmp194 * _tmp240 + _tmp195 * _tmp241;
    _hessian(9, 3) = _tmp194 * _tmp257 + _tmp195 * _tmp258;
    _hessian(10, 3) = _tmp194 * _tmp268 + _tmp195 * _tmp269;
    _hessian(11, 3) = _tmp194 * _tmp276 + _tmp195 * _tmp277;
    _hessian(12, 3) = _tmp194 * _tmp285 + _tmp195 * _tmp286;
    _hessian(13, 3) = _tmp194 * _tmp294 + _tmp195 * _tmp295;
    _hessian(14, 3) = _tmp194 * _tmp303 + _tmp195 * _tmp304;
    _hessian(15, 3) = _tmp194 * _tmp330 + _tmp195 * _tmp331;
    _hessian(16, 3) = _tmp194 * _tmp353 + _tmp195 * _tmp355;
    _hessian(17, 3) = _tmp194 * _tmp373 + _tmp195 * _tmp374;
    _hessian(18, 3) = _tmp194 * _tmp392 + _tmp195 * _tmp393;
    _hessian(0, 4) = 0;
    _hessian(1, 4) = 0;
    _hessian(2, 4) = 0;
    _hessian(3, 4) = 0;
    _hessian(4, 4) = std::pow(_tmp209, Scalar(2)) + std::pow(_tmp210, Scalar(2));
    _hessian(5, 4) = _tmp209 * _tmp222 + _tmp210 * _tmp223;
    _hessian(6, 4) = _tmp209 * _tmp228 + _tmp210 * _tmp229;
    _hessian(7, 4) = _tmp209 * _tmp234 + _tmp210 * _tmp235;
    _hessian(8, 4) = _tmp209 * _tmp240 + _tmp210 * _tmp241;
    _hessian(9, 4) = _tmp209 * _tmp257 + _tmp210 * _tmp258;
    _hessian(10, 4) = _tmp209 * _tmp268 + _tmp210 * _tmp269;
    _hessian(11, 4) = _tmp209 * _tmp276 + _tmp210 * _tmp277;
    _hessian(12, 4) = _tmp209 * _tmp285 + _tmp210 * _tmp286;
    _hessian(13, 4) = _tmp209 * _tmp294 + _tmp210 * _tmp295;
    _hessian(14, 4) = _tmp209 * _tmp303 + _tmp210 * _tmp304;
    _hessian(15, 4) = _tmp209 * _tmp330 + _tmp210 * _tmp331;
    _hessian(16, 4) = _tmp209 * _tmp353 + _tmp210 * _tmp355;
    _hessian(17, 4) = _tmp209 * _tmp373 + _tmp210 * _tmp374;
    _hessian(18, 4) = _tmp209 * _tmp392 + _tmp210 * _tmp393;
    _hessian(0, 5) = 0;
    _hessian(1, 5) = 0;
    _hessian(2, 5) = 0;
    _hessian(3, 5) = 0;
    _hessian(4, 5) = 0;
    _hessian(5, 5) = std::pow(_tmp222, Scalar(2)) + std::pow(_tmp223, Scalar(2));
    _hessian(6, 5) = _tmp222 * _tmp228 + _tmp223 * _tmp229;
    _hessian(7, 5) = _tmp222 * _tmp234 + _tmp223 * _tmp235;
    _hessian(8, 5) = _tmp222 * _tmp240 + _tmp223 * _tmp241;
    _hessian(9, 5) = _tmp222 * _tmp257 + _tmp223 * _tmp258;
    _hessian(10, 5) = _tmp222 * _tmp268 + _tmp223 * _tmp269;
    _hessian(11, 5) = _tmp222 * _tmp276 + _tmp223 * _tmp277;
    _hessian(12, 5) = _tmp222 * _tmp285 + _tmp223 * _tmp286;
    _hessian(13, 5) = _tmp222 * _tmp294 + _tmp223 * _tmp295;
    _hessian(14, 5) = _tmp222 * _tmp303 + _tmp223 * _tmp304;
    _hessian(15, 5) = _tmp222 * _tmp330 + _tmp223 * _tmp331;
    _hessian(16, 5) = _tmp222 * _tmp353 + _tmp223 * _tmp355;
    _hessian(17, 5) = _tmp222 * _tmp373 + _tmp223 * _tmp374;
    _hessian(18, 5) = _tmp222 * _tmp392 + _tmp223 * _tmp393;
    _hessian(0, 6) = 0;
    _hessian(1, 6) = 0;
    _hessian(2, 6) = 0;
    _hessian(3, 6) = 0;
    _hessian(4, 6) = 0;
    _hessian(5, 6) = 0;
    _hessian(6, 6) = std::pow(_tmp228, Scalar(2)) + std::pow(_tmp229, Scalar(2));
    _hessian(7, 6) = _tmp228 * _tmp234 + _tmp229 * _tmp235;
    _hessian(8, 6) = _tmp228 * _tmp240 + _tmp229 * _tmp241;
    _hessian(9, 6) = _tmp228 * _tmp257 + _tmp229 * _tmp258;
    _hessian(10, 6) = _tmp228 * _tmp268 + _tmp229 * _tmp269;
    _hessian(11, 6) = _tmp228 * _tmp276 + _tmp229 * _tmp277;
    _hessian(12, 6) = _tmp228 * _tmp285 + _tmp229 * _tmp286;
    _hessian(13, 6) = _tmp228 * _tmp294 + _tmp229 * _tmp295;
    _hessian(14, 6) = _tmp228 * _tmp303 + _tmp229 * _tmp304;
    _hessian(15, 6) = _tmp228 * _tmp330 + _tmp229 * _tmp331;
    _hessian(16, 6) = _tmp228 * _tmp353 + _tmp229 * _tmp355;
    _hessian(17, 6) = _tmp228 * _tmp373 + _tmp229 * _tmp374;
    _hessian(18, 6) = _tmp228 * _tmp392 + _tmp229 * _tmp393;
    _hessian(0, 7) = 0;
    _hessian(1, 7) = 0;
    _hessian(2, 7) = 0;
    _hessian(3, 7) = 0;
    _hessian(4, 7) = 0;
    _hessian(5, 7) = 0;
    _hessian(6, 7) = 0;
    _hessian(7, 7) = std::pow(_tmp234, Scalar(2)) + std::pow(_tmp235, Scalar(2));
    _hessian(8, 7) = _tmp234 * _tmp240 + _tmp235 * _tmp241;
    _hessian(9, 7) = _tmp234 * _tmp257 + _tmp235 * _tmp258;
    _hessian(10, 7) = _tmp234 * _tmp268 + _tmp235 * _tmp269;
    _hessian(11, 7) = _tmp234 * _tmp276 + _tmp235 * _tmp277;
    _hessian(12, 7) = _tmp234 * _tmp285 + _tmp235 * _tmp286;
    _hessian(13, 7) = _tmp234 * _tmp294 + _tmp235 * _tmp295;
    _hessian(14, 7) = _tmp234 * _tmp303 + _tmp235 * _tmp304;
    _hessian(15, 7) = _tmp234 * _tmp330 + _tmp235 * _tmp331;
    _hessian(16, 7) = _tmp234 * _tmp353 + _tmp235 * _tmp355;
    _hessian(17, 7) = _tmp234 * _tmp373 + _tmp235 * _tmp374;
    _hessian(18, 7) = _tmp234 * _tmp392 + _tmp235 * _tmp393;
    _hessian(0, 8) = 0;
    _hessian(1, 8) = 0;
    _hessian(2, 8) = 0;
    _hessian(3, 8) = 0;
    _hessian(4, 8) = 0;
    _hessian(5, 8) = 0;
    _hessian(6, 8) = 0;
    _hessian(7, 8) = 0;
    _hessian(8, 8) = std::pow(_tmp240, Scalar(2)) + std::pow(_tmp241, Scalar(2));
    _hessian(9, 8) = _tmp240 * _tmp257 + _tmp241 * _tmp258;
    _hessian(10, 8) = _tmp240 * _tmp268 + _tmp241 * _tmp269;
    _hessian(11, 8) = _tmp240 * _tmp276 + _tmp241 * _tmp277;
    _hessian(12, 8) = _tmp240 * _tmp285 + _tmp241 * _tmp286;
    _hessian(13, 8) = _tmp240 * _tmp294 + _tmp241 * _tmp295;
    _hessian(14, 8) = _tmp240 * _tmp303 + _tmp241 * _tmp304;
    _hessian(15, 8) = _tmp240 * _tmp330 + _tmp241 * _tmp331;
    _hessian(16, 8) = _tmp240 * _tmp353 + _tmp241 * _tmp355;
    _hessian(17, 8) = _tmp240 * _tmp373 + _tmp241 * _tmp374;
    _hessian(18, 8) = _tmp240 * _tmp392 + _tmp241 * _tmp393;
    _hessian(0, 9) = 0;
    _hessian(1, 9) = 0;
    _hessian(2, 9) = 0;
    _hessian(3, 9) = 0;
    _hessian(4, 9) = 0;
    _hessian(5, 9) = 0;
    _hessian(6, 9) = 0;
    _hessian(7, 9) = 0;
    _hessian(8, 9) = 0;
    _hessian(9, 9) = std::pow(_tmp257, Scalar(2)) + std::pow(_tmp258, Scalar(2));
    _hessian(10, 9) = _tmp257 * _tmp268 + _tmp258 * _tmp269;
    _hessian(11, 9) = _tmp257 * _tmp276 + _tmp258 * _tmp277;
    _hessian(12, 9) = _tmp257 * _tmp285 + _tmp258 * _tmp286;
    _hessian(13, 9) = _tmp257 * _tmp294 + _tmp258 * _tmp295;
    _hessian(14, 9) = _tmp257 * _tmp303 + _tmp258 * _tmp304;
    _hessian(15, 9) = _tmp257 * _tmp330 + _tmp258 * _tmp331;
    _hessian(16, 9) = _tmp257 * _tmp353 + _tmp258 * _tmp355;
    _hessian(17, 9) = _tmp257 * _tmp373 + _tmp258 * _tmp374;
    _hessian(18, 9) = _tmp257 * _tmp392 + _tmp258 * _tmp393;
    _hessian(0, 10) = 0;
    _hessian(1, 10) = 0;
    _hessian(2, 10) = 0;
    _hessian(3, 10) = 0;
    _hessian(4, 10) = 0;
    _hessian(5, 10) = 0;
    _hessian(6, 10) = 0;
    _hessian(7, 10) = 0;
    _hessian(8, 10) = 0;
    _hessian(9, 10) = 0;
    _hessian(10, 10) = std::pow(_tmp268, Scalar(2)) + std::pow(_tmp269, Scalar(2));
    _hessian(11, 10) = _tmp268 * _tmp276 + _tmp269 * _tmp277;
    _hessian(12, 10) = _tmp268 * _tmp285 + _tmp269 * _tmp286;
    _hessian(13, 10) = _tmp268 * _tmp294 + _tmp269 * _tmp295;
    _hessian(14, 10) = _tmp268 * _tmp303 + _tmp269 * _tmp304;
    _hessian(15, 10) = _tmp268 * _tmp330 + _tmp269 * _tmp331;
    _hessian(16, 10) = _tmp268 * _tmp353 + _tmp269 * _tmp355;
    _hessian(17, 10) = _tmp268 * _tmp373 + _tmp269 * _tmp374;
    _hessian(18, 10) = _tmp268 * _tmp392 + _tmp269 * _tmp393;
    _hessian(0, 11) = 0;
    _hessian(1, 11) = 0;
    _hessian(2, 11) = 0;
    _hessian(3, 11) = 0;
    _hessian(4, 11) = 0;
    _hessian(5, 11) = 0;
    _hessian(6, 11) = 0;
    _hessian(7, 11) = 0;
    _hessian(8, 11) = 0;
    _hessian(9, 11) = 0;
    _hessian(10, 11) = 0;
    _hessian(11, 11) = std::pow(_tmp276, Scalar(2)) + std::pow(_tmp277, Scalar(2));
    _hessian(12, 11) = _tmp276 * _tmp285 + _tmp277 * _tmp286;
    _hessian(13, 11) = _tmp276 * _tmp294 + _tmp277 * _tmp295;
    _hessian(14, 11) = _tmp276 * _tmp303 + _tmp277 * _tmp304;
    _hessian(15, 11) = _tmp276 * _tmp330 + _tmp277 * _tmp331;
    _hessian(16, 11) = _tmp276 * _tmp353 + _tmp277 * _tmp355;
    _hessian(17, 11) = _tmp276 * _tmp373 + _tmp277 * _tmp374;
    _hessian(18, 11) = _tmp276 * _tmp392 + _tmp277 * _tmp393;
    _hessian(0, 12) = 0;
    _hessian(1, 12) = 0;
    _hessian(2, 12) = 0;
    _hessian(3, 12) = 0;
    _hessian(4, 12) = 0;
    _hessian(5, 12) = 0;
    _hessian(6, 12) = 0;
    _hessian(7, 12) = 0;
    _hessian(8, 12) = 0;
    _hessian(9, 12) = 0;
    _hessian(10, 12) = 0;
    _hessian(11, 12) = 0;
    _hessian(12, 12) = std::pow(_tmp285, Scalar(2)) + std::pow(_tmp286, Scalar(2));
    _hessian(13, 12) = _tmp285 * _tmp294 + _tmp286 * _tmp295;
    _hessian(14, 12) = _tmp285 * _tmp303 + _tmp286 * _tmp304;
    _hessian(15, 12) = _tmp285 * _tmp330 + _tmp286 * _tmp331;
    _hessian(16, 12) = _tmp285 * _tmp353 + _tmp286 * _tmp355;
    _hessian(17, 12) = _tmp285 * _tmp373 + _tmp286 * _tmp374;
    _hessian(18, 12) = _tmp285 * _tmp392 + _tmp286 * _tmp393;
    _hessian(0, 13) = 0;
    _hessian(1, 13) = 0;
    _hessian(2, 13) = 0;
    _hessian(3, 13) = 0;
    _hessian(4, 13) = 0;
    _hessian(5, 13) = 0;
    _hessian(6, 13) = 0;
    _hessian(7, 13) = 0;
    _hessian(8, 13) = 0;
    _hessian(9, 13) = 0;
    _hessian(10, 13) = 0;
    _hessian(11, 13) = 0;
    _hessian(12, 13) = 0;
    _hessian(13, 13) = std::pow(_tmp294, Scalar(2)) + std::pow(_tmp295, Scalar(2));
    _hessian(14, 13) = _tmp294 * _tmp303 + _tmp295 * _tmp304;
    _hessian(15, 13) = _tmp294 * _tmp330 + _tmp295 * _tmp331;
    _hessian(16, 13) = _tmp294 * _tmp353 + _tmp295 * _tmp355;
    _hessian(17, 13) = _tmp294 * _tmp373 + _tmp295 * _tmp374;
    _hessian(18, 13) = _tmp294 * _tmp392 + _tmp295 * _tmp393;
    _hessian(0, 14) = 0;
    _hessian(1, 14) = 0;
    _hessian(2, 14) = 0;
    _hessian(3, 14) = 0;
    _hessian(4, 14) = 0;
    _hessian(5, 14) = 0;
    _hessian(6, 14) = 0;
    _hessian(7, 14) = 0;
    _hessian(8, 14) = 0;
    _hessian(9, 14) = 0;
    _hessian(10, 14) = 0;
    _hessian(11, 14) = 0;
    _hessian(12, 14) = 0;
    _hessian(13, 14) = 0;
    _hessian(14, 14) = std::pow(_tmp303, Scalar(2)) + std::pow(_tmp304, Scalar(2));
    _hessian(15, 14) = _tmp303 * _tmp330 + _tmp304 * _tmp331;
    _hessian(16, 14) = _tmp303 * _tmp353 + _tmp304 * _tmp355;
    _hessian(17, 14) = _tmp303 * _tmp373 + _tmp304 * _tmp374;
    _hessian(18, 14) = _tmp303 * _tmp392 + _tmp304 * _tmp393;
    _hessian(0, 15) = 0;
    _hessian(1, 15) = 0;
    _hessian(2, 15) = 0;
    _hessian(3, 15) = 0;
    _hessian(4, 15) = 0;
    _hessian(5, 15) = 0;
    _hessian(6, 15) = 0;
    _hessian(7, 15) = 0;
    _hessian(8, 15) = 0;
    _hessian(9, 15) = 0;
    _hessian(10, 15) = 0;
    _hessian(11, 15) = 0;
    _hessian(12, 15) = 0;
    _hessian(13, 15) = 0;
    _hessian(14, 15) = 0;
    _hessian(15, 15) = std::pow(_tmp330, Scalar(2)) + std::pow(_tmp331, Scalar(2));
    _hessian(16, 15) = _tmp330 * _tmp353 + _tmp331 * _tmp355;
    _hessian(17, 15) = _tmp330 * _tmp373 + _tmp331 * _tmp374;
    _hessian(18, 15) = _tmp330 * _tmp392 + _tmp331 * _tmp393;
    _hessian(0, 16) = 0;
    _hessian(1, 16) = 0;
    _hessian(2, 16) = 0;
    _hessian(3, 16) = 0;
    _hessian(4, 16) = 0;
    _hessian(5, 16) = 0;
    _hessian(6, 16) = 0;
    _hessian(7, 16) = 0;
    _hessian(8, 16) = 0;
    _hessian(9, 16) = 0;
    _hessian(10, 16) = 0;
    _hessian(11, 16) = 0;
    _hessian(12, 16) = 0;
    _hessian(13, 16) = 0;
    _hessian(14, 16) = 0;
    _hessian(15, 16) = 0;
    _hessian(16, 16) = std::pow(_tmp353, Scalar(2)) + std::pow(_tmp355, Scalar(2));
    _hessian(17, 16) = _tmp353 * _tmp373 + _tmp355 * _tmp374;
    _hessian(18, 16) = _tmp353 * _tmp392 + _tmp355 * _tmp393;
    _hessian(0, 17) = 0;
    _hessian(1, 17) = 0;
    _hessian(2, 17) = 0;
    _hessian(3, 17) = 0;
    _hessian(4, 17) = 0;
    _hessian(5, 17) = 0;
    _hessian(6, 17) = 0;
    _hessian(7, 17) = 0;
    _hessian(8, 17) = 0;
    _hessian(9, 17) = 0;
    _hessian(10, 17) = 0;
    _hessian(11, 17) = 0;
    _hessian(12, 17) = 0;
    _hessian(13, 17) = 0;
    _hessian(14, 17) = 0;
    _hessian(15, 17) = 0;
    _hessian(16, 17) = 0;
    _hessian(17, 17) = std::pow(_tmp373, Scalar(2)) + std::pow(_tmp374, Scalar(2));
    _hessian(18, 17) = _tmp373 * _tmp392 + _tmp374 * _tmp393;
    _hessian(0, 18) = 0;
    _hessian(1, 18) = 0;
    _hessian(2, 18) = 0;
    _hessian(3, 18) = 0;
    _hessian(4, 18) = 0;
    _hessian(5, 18) = 0;
    _hessian(6, 18) = 0;
    _hessian(7, 18) = 0;
    _hessian(8, 18) = 0;
    _hessian(9, 18) = 0;
    _hessian(10, 18) = 0;
    _hessian(11, 18) = 0;
    _hessian(12, 18) = 0;
    _hessian(13, 18) = 0;
    _hessian(14, 18) = 0;
    _hessian(15, 18) = 0;
    _hessian(16, 18) = 0;
    _hessian(17, 18) = 0;
    _hessian(18, 18) = std::pow(_tmp392, Scalar(2)) + std::pow(_tmp393, Scalar(2));
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 19, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp116 * _tmp141 + _tmp117 * _tmp145;
    _rhs(1, 0) = _tmp116 * _tmp159 + _tmp117 * _tmp160;
    _rhs(2, 0) = _tmp116 * _tmp174 + _tmp117 * _tmp175;
    _rhs(3, 0) = _tmp116 * _tmp194 + _tmp117 * _tmp195;
    _rhs(4, 0) = _tmp116 * _tmp209 + _tmp117 * _tmp210;
    _rhs(5, 0) = _tmp116 * _tmp222 + _tmp117 * _tmp223;
    _rhs(6, 0) = _tmp116 * _tmp228 + _tmp117 * _tmp229;
    _rhs(7, 0) = _tmp116 * _tmp234 + _tmp117 * _tmp235;
    _rhs(8, 0) = _tmp116 * _tmp240 + _tmp117 * _tmp241;
    _rhs(9, 0) = _tmp116 * _tmp257 + _tmp117 * _tmp258;
    _rhs(10, 0) = _tmp116 * _tmp268 + _tmp117 * _tmp269;
    _rhs(11, 0) = _tmp116 * _tmp276 + _tmp117 * _tmp277;
    _rhs(12, 0) = _tmp116 * _tmp285 + _tmp117 * _tmp286;
    _rhs(13, 0) = _tmp116 * _tmp294 + _tmp117 * _tmp295;
    _rhs(14, 0) = _tmp116 * _tmp303 + _tmp117 * _tmp304;
    _rhs(15, 0) = _tmp116 * _tmp330 + _tmp117 * _tmp331;
    _rhs(16, 0) = _tmp116 * _tmp353 + _tmp117 * _tmp355;
    _rhs(17, 0) = _tmp116 * _tmp373 + _tmp117 * _tmp374;
    _rhs(18, 0) = _tmp116 * _tmp392 + _tmp117 * _tmp393;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
