// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: imu_residual
 *
 * Args:
 *     Pi: Matrix31
 *     Qi: Rot3
 *     Vi: Matrix31
 *     Bai: Matrix31
 *     Bgi: Matrix31
 *     Pj: Matrix31
 *     Qj: Rot3
 *     Vj: Matrix31
 *     Baj: Matrix31
 *     Bgj: Matrix31
 *     delta_p: Matrix31
 *     delta_q: Quaternion
 *     delta_v: Matrix31
 *     G: Matrix31
 *     sum_dt: Scalar
 *     dp_dba: Matrix33
 *     dp_dbg: Matrix33
 *     dq_dbg: Matrix33
 *     dv_dba: Matrix33
 *     dv_dbg: Matrix33
 *     linearized_ba: Matrix31
 *     linearized_bg: Matrix31
 *
 * Outputs:
 *     res: Matrix15_1
 *     jacobian: (15x30) jacobian of res wrt args Pi (3), Qi (3), Vi (3), Bai (3), Bgi (3), Pj (3),
 *               Qj (3), Vj (3), Baj (3), Bgj (3)
 *     hessian: (30x30) Gauss-Newton hessian for args Pi (3), Qi (3), Vi (3), Bai (3), Bgi (3), Pj
 *              (3), Qj (3), Vj (3), Baj (3), Bgj (3)
 *     rhs: (30x1) Gauss-Newton rhs for args Pi (3), Qi (3), Vi (3), Bai (3), Bgi (3), Pj (3), Qj
 *          (3), Vj (3), Baj (3), Bgj (3)
 */
template <typename Scalar>
void ImuFactor(const Eigen::Matrix<Scalar, 3, 1>& Pi, const sym::Rot3<Scalar>& Qi,
               const Eigen::Matrix<Scalar, 3, 1>& Vi, const Eigen::Matrix<Scalar, 3, 1>& Bai,
               const Eigen::Matrix<Scalar, 3, 1>& Bgi, const Eigen::Matrix<Scalar, 3, 1>& Pj,
               const sym::Rot3<Scalar>& Qj, const Eigen::Matrix<Scalar, 3, 1>& Vj,
               const Eigen::Matrix<Scalar, 3, 1>& Baj, const Eigen::Matrix<Scalar, 3, 1>& Bgj,
               const Eigen::Matrix<Scalar, 3, 1>& delta_p, const sym::Quaternion<Scalar>& delta_q,
               const Eigen::Matrix<Scalar, 3, 1>& delta_v, const Eigen::Matrix<Scalar, 3, 1>& G,
               const Scalar sum_dt, const Eigen::Matrix<Scalar, 3, 3>& dp_dba,
               const Eigen::Matrix<Scalar, 3, 3>& dp_dbg, const Eigen::Matrix<Scalar, 3, 3>& dq_dbg,
               const Eigen::Matrix<Scalar, 3, 3>& dv_dba, const Eigen::Matrix<Scalar, 3, 3>& dv_dbg,
               const Eigen::Matrix<Scalar, 3, 1>& linearized_ba,
               const Eigen::Matrix<Scalar, 3, 1>& linearized_bg,
               Eigen::Matrix<Scalar, 15, 1>* const res = nullptr,
               Eigen::Matrix<Scalar, 15, 30>* const jacobian = nullptr,
               Eigen::Matrix<Scalar, 30, 30>* const hessian = nullptr,
               Eigen::Matrix<Scalar, 30, 1>* const rhs = nullptr) {
  // Total ops: 2202

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _Qi = Qi.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Qj = Qj.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _delta_q = delta_q.Data();

  // Intermediate terms (457)
  const Scalar _tmp0 = std::pow(_Qi[2], Scalar(2));
  const Scalar _tmp1 = -2 * _tmp0;
  const Scalar _tmp2 = std::pow(_Qi[1], Scalar(2));
  const Scalar _tmp3 = -2 * _tmp2;
  const Scalar _tmp4 = _tmp1 + _tmp3 + 1;
  const Scalar _tmp5 = std::pow(sum_dt, Scalar(2));
  const Scalar _tmp6 = Scalar(0.5) * _tmp5;
  const Scalar _tmp7 = G(0, 0) * _tmp6 - Pi(0, 0) + Pj(0, 0) - Vi(0, 0) * sum_dt;
  const Scalar _tmp8 = Bgi(0, 0) - linearized_bg(0, 0);
  const Scalar _tmp9 = Bgi(1, 0) - linearized_bg(1, 0);
  const Scalar _tmp10 = Bgi(2, 0) - linearized_bg(2, 0);
  const Scalar _tmp11 = Bai(1, 0) - linearized_ba(1, 0);
  const Scalar _tmp12 = Bai(0, 0) - linearized_ba(0, 0);
  const Scalar _tmp13 = Bai(2, 0) - linearized_ba(2, 0);
  const Scalar _tmp14 = 2 * _Qi[1];
  const Scalar _tmp15 = _Qi[3] * _tmp14;
  const Scalar _tmp16 = -_tmp15;
  const Scalar _tmp17 = 2 * _Qi[0];
  const Scalar _tmp18 = _Qi[2] * _tmp17;
  const Scalar _tmp19 = _tmp16 + _tmp18;
  const Scalar _tmp20 = G(2, 0) * _tmp6 - Pi(2, 0) + Pj(2, 0) - Vi(2, 0) * sum_dt;
  const Scalar _tmp21 = _Qi[1] * _tmp17;
  const Scalar _tmp22 = 2 * _Qi[2] * _Qi[3];
  const Scalar _tmp23 = _tmp21 + _tmp22;
  const Scalar _tmp24 = G(1, 0) * _tmp6 - Pi(1, 0) + Pj(1, 0) - Vi(1, 0) * sum_dt;
  const Scalar _tmp25 = _tmp19 * _tmp20 + _tmp23 * _tmp24;
  const Scalar _tmp26 = -_tmp10 * dp_dbg(0, 2) - _tmp11 * dp_dba(0, 1) - _tmp12 * dp_dba(0, 0) -
                        _tmp13 * dp_dba(0, 2) + _tmp25 + _tmp4 * _tmp7 - _tmp8 * dp_dbg(0, 0) -
                        _tmp9 * dp_dbg(0, 1) - delta_p(0, 0);
  const Scalar _tmp27 = std::pow(_Qi[0], Scalar(2));
  const Scalar _tmp28 = 1 - 2 * _tmp27;
  const Scalar _tmp29 = _tmp1 + _tmp28;
  const Scalar _tmp30 = _Qi[2] * _tmp14;
  const Scalar _tmp31 = _Qi[3] * _tmp17;
  const Scalar _tmp32 = _tmp30 + _tmp31;
  const Scalar _tmp33 = -_tmp22;
  const Scalar _tmp34 = _tmp21 + _tmp33;
  const Scalar _tmp35 = _tmp20 * _tmp32 + _tmp34 * _tmp7;
  const Scalar _tmp36 = -_tmp10 * dp_dbg(1, 2) - _tmp11 * dp_dba(1, 1) - _tmp12 * dp_dba(1, 0) -
                        _tmp13 * dp_dba(1, 2) + _tmp24 * _tmp29 + _tmp35 - _tmp8 * dp_dbg(1, 0) -
                        _tmp9 * dp_dbg(1, 1) - delta_p(1, 0);
  const Scalar _tmp37 = _tmp28 + _tmp3;
  const Scalar _tmp38 = _tmp15 + _tmp18;
  const Scalar _tmp39 = -_tmp31;
  const Scalar _tmp40 = _tmp30 + _tmp39;
  const Scalar _tmp41 = _tmp24 * _tmp40 + _tmp38 * _tmp7;
  const Scalar _tmp42 = -_tmp10 * dp_dbg(2, 2) - _tmp11 * dp_dba(2, 1) - _tmp12 * dp_dba(2, 0) -
                        _tmp13 * dp_dba(2, 2) + _tmp20 * _tmp37 + _tmp41 - _tmp8 * dp_dbg(2, 0) -
                        _tmp9 * dp_dbg(2, 1) - delta_p(2, 0);
  const Scalar _tmp43 = _Qi[1] * _Qj[3];
  const Scalar _tmp44 = _Qi[0] * _Qj[2];
  const Scalar _tmp45 = _Qi[2] * _Qj[0];
  const Scalar _tmp46 = _Qi[3] * _Qj[1];
  const Scalar _tmp47 = -_tmp43 + _tmp44 - _tmp45 + _tmp46;
  const Scalar _tmp48 = Scalar(0.5) * _tmp10 * dq_dbg(0, 2) + Scalar(0.5) * _tmp8 * dq_dbg(0, 0) +
                        Scalar(0.5) * _tmp9 * dq_dbg(0, 1);
  const Scalar _tmp49 = Scalar(0.5) * _tmp10 * dq_dbg(1, 2) + Scalar(0.5) * _tmp8 * dq_dbg(1, 0) +
                        Scalar(0.5) * _tmp9 * dq_dbg(1, 1);
  const Scalar _tmp50 = Scalar(0.5) * _tmp10 * dq_dbg(2, 2) + Scalar(0.5) * _tmp8 * dq_dbg(2, 0) +
                        Scalar(0.5) * _tmp9 * dq_dbg(2, 1);
  const Scalar _tmp51 = _delta_q[0] * _tmp49 - _delta_q[1] * _tmp48 + Scalar(1.0) * _delta_q[2] +
                        _delta_q[3] * _tmp50;
  const Scalar _tmp52 = _Qi[1] * _Qj[0];
  const Scalar _tmp53 = _Qi[0] * _Qj[1];
  const Scalar _tmp54 = _Qi[2] * _Qj[3];
  const Scalar _tmp55 = _Qi[3] * _Qj[2];
  const Scalar _tmp56 = _tmp52 - _tmp53 - _tmp54 + _tmp55;
  const Scalar _tmp57 = -_delta_q[0] * _tmp50 + Scalar(1.0) * _delta_q[1] + _delta_q[2] * _tmp48 +
                        _delta_q[3] * _tmp49;
  const Scalar _tmp58 = _Qi[1] * _Qj[2];
  const Scalar _tmp59 = _Qi[0] * _Qj[3];
  const Scalar _tmp60 = _Qi[2] * _Qj[1];
  const Scalar _tmp61 = _Qi[3] * _Qj[0];
  const Scalar _tmp62 = -_tmp58 - _tmp59 + _tmp60 + _tmp61;
  const Scalar _tmp63 = -_delta_q[0] * _tmp48 - _delta_q[1] * _tmp49 - _delta_q[2] * _tmp50 +
                        Scalar(1.0) * _delta_q[3];
  const Scalar _tmp64 = Scalar(1.0) * _delta_q[0] + _delta_q[1] * _tmp50 - _delta_q[2] * _tmp49 +
                        _delta_q[3] * _tmp48;
  const Scalar _tmp65 = _Qi[1] * _Qj[1];
  const Scalar _tmp66 = _Qi[0] * _Qj[0];
  const Scalar _tmp67 = _Qi[2] * _Qj[2];
  const Scalar _tmp68 = _Qi[3] * _Qj[3];
  const Scalar _tmp69 = _tmp65 + _tmp66 + _tmp67 + _tmp68;
  const Scalar _tmp70 =
      2 * _tmp47 * _tmp51 - 2 * _tmp56 * _tmp57 + 2 * _tmp62 * _tmp63 - 2 * _tmp64 * _tmp69;
  const Scalar _tmp71 =
      2 * _tmp47 * _tmp63 - 2 * _tmp51 * _tmp62 + 2 * _tmp56 * _tmp64 - 2 * _tmp57 * _tmp69;
  const Scalar _tmp72 =
      -2 * _tmp47 * _tmp64 - 2 * _tmp51 * _tmp69 + 2 * _tmp56 * _tmp63 + 2 * _tmp57 * _tmp62;
  const Scalar _tmp73 = G(0, 0) * sum_dt - Vi(0, 0) + Vj(0, 0);
  const Scalar _tmp74 = G(1, 0) * sum_dt - Vi(1, 0) + Vj(1, 0);
  const Scalar _tmp75 = G(2, 0) * sum_dt - Vi(2, 0) + Vj(2, 0);
  const Scalar _tmp76 = _tmp19 * _tmp75 + _tmp23 * _tmp74;
  const Scalar _tmp77 = -_tmp10 * dv_dbg(0, 2) - _tmp11 * dv_dba(0, 1) - _tmp12 * dv_dba(0, 0) -
                        _tmp13 * dv_dba(0, 2) + _tmp4 * _tmp73 + _tmp76 - _tmp8 * dv_dbg(0, 0) -
                        _tmp9 * dv_dbg(0, 1) - delta_v(0, 0);
  const Scalar _tmp78 = _tmp32 * _tmp75 + _tmp34 * _tmp73;
  const Scalar _tmp79 = -_tmp10 * dv_dbg(1, 2) - _tmp11 * dv_dba(1, 1) - _tmp12 * dv_dba(1, 0) -
                        _tmp13 * dv_dba(1, 2) + _tmp29 * _tmp74 + _tmp78 - _tmp8 * dv_dbg(1, 0) -
                        _tmp9 * dv_dbg(1, 1) - delta_v(1, 0);
  const Scalar _tmp80 = _tmp38 * _tmp73 + _tmp40 * _tmp74;
  const Scalar _tmp81 = -_tmp10 * dv_dbg(2, 2) - _tmp11 * dv_dba(2, 1) - _tmp12 * dv_dba(2, 0) -
                        _tmp13 * dv_dba(2, 2) + _tmp37 * _tmp75 - _tmp8 * dv_dbg(2, 0) + _tmp80 -
                        _tmp9 * dv_dbg(2, 1) - delta_v(2, 0);
  const Scalar _tmp82 = -Bai(0, 0) + Baj(0, 0);
  const Scalar _tmp83 = -Bai(1, 0) + Baj(1, 0);
  const Scalar _tmp84 = -Bai(2, 0) + Baj(2, 0);
  const Scalar _tmp85 = -Bgi(0, 0) + Bgj(0, 0);
  const Scalar _tmp86 = -Bgi(1, 0) + Bgj(1, 0);
  const Scalar _tmp87 = -Bgi(2, 0) + Bgj(2, 0);
  const Scalar _tmp88 = -_tmp4;
  const Scalar _tmp89 = -_tmp34;
  const Scalar _tmp90 = -_tmp38;
  const Scalar _tmp91 = -_tmp23;
  const Scalar _tmp92 = -_tmp29;
  const Scalar _tmp93 = -_tmp40;
  const Scalar _tmp94 = -_tmp19;
  const Scalar _tmp95 = -_tmp32;
  const Scalar _tmp96 = -_tmp37;
  const Scalar _tmp97 = -_tmp27;
  const Scalar _tmp98 = std::pow(_Qi[3], Scalar(2));
  const Scalar _tmp99 = -_tmp2;
  const Scalar _tmp100 = _tmp0 + _tmp97 + _tmp98 + _tmp99;
  const Scalar _tmp101 = _tmp100 * _tmp20 + _tmp41;
  const Scalar _tmp102 = -_tmp98;
  const Scalar _tmp103 = _tmp0 + _tmp102;
  const Scalar _tmp104 = _tmp27 + _tmp99;
  const Scalar _tmp105 = _tmp103 + _tmp104;
  const Scalar _tmp106 = -_tmp30;
  const Scalar _tmp107 = _tmp106 + _tmp39;
  const Scalar _tmp108 = -_tmp21;
  const Scalar _tmp109 = _tmp108 + _tmp22;
  const Scalar _tmp110 = _tmp105 * _tmp24 + _tmp107 * _tmp20 + _tmp109 * _tmp7;
  const Scalar _tmp111 = (Scalar(1) / Scalar(2)) * _tmp58;
  const Scalar _tmp112 = (Scalar(1) / Scalar(2)) * _tmp59;
  const Scalar _tmp113 = (Scalar(1) / Scalar(2)) * _tmp60;
  const Scalar _tmp114 = (Scalar(1) / Scalar(2)) * _tmp61;
  const Scalar _tmp115 = -_tmp111 - _tmp112 + _tmp113 + _tmp114;
  const Scalar _tmp116 = 2 * _tmp64;
  const Scalar _tmp117 = _tmp115 * _tmp116;
  const Scalar _tmp118 = (Scalar(1) / Scalar(2)) * _tmp65;
  const Scalar _tmp119 = (Scalar(1) / Scalar(2)) * _tmp66;
  const Scalar _tmp120 = (Scalar(1) / Scalar(2)) * _tmp67;
  const Scalar _tmp121 = (Scalar(1) / Scalar(2)) * _tmp68;
  const Scalar _tmp122 = -_tmp118 - _tmp119 - _tmp120 - _tmp121;
  const Scalar _tmp123 = 2 * _tmp63;
  const Scalar _tmp124 = _tmp122 * _tmp123;
  const Scalar _tmp125 = (Scalar(1) / Scalar(2)) * _tmp43;
  const Scalar _tmp126 = (Scalar(1) / Scalar(2)) * _tmp44;
  const Scalar _tmp127 = (Scalar(1) / Scalar(2)) * _tmp45;
  const Scalar _tmp128 = (Scalar(1) / Scalar(2)) * _tmp46;
  const Scalar _tmp129 = _tmp125 - _tmp126 + _tmp127 - _tmp128;
  const Scalar _tmp130 = 2 * _tmp57;
  const Scalar _tmp131 = -_tmp129 * _tmp130;
  const Scalar _tmp132 = (Scalar(1) / Scalar(2)) * _tmp52;
  const Scalar _tmp133 = (Scalar(1) / Scalar(2)) * _tmp53;
  const Scalar _tmp134 = (Scalar(1) / Scalar(2)) * _tmp54;
  const Scalar _tmp135 = (Scalar(1) / Scalar(2)) * _tmp55;
  const Scalar _tmp136 = _tmp132 - _tmp133 - _tmp134 + _tmp135;
  const Scalar _tmp137 = 2 * _tmp51;
  const Scalar _tmp138 = _tmp136 * _tmp137;
  const Scalar _tmp139 = _tmp131 + _tmp138;
  const Scalar _tmp140 = -_tmp117 + _tmp124 + _tmp139;
  const Scalar _tmp141 = _tmp122 * _tmp137;
  const Scalar _tmp142 = -_tmp115 * _tmp130;
  const Scalar _tmp143 = _tmp116 * _tmp129;
  const Scalar _tmp144 = _tmp123 * _tmp136 + _tmp143;
  const Scalar _tmp145 = -_tmp141 + _tmp142 + _tmp144;
  const Scalar _tmp146 = _tmp122 * _tmp130;
  const Scalar _tmp147 = -_tmp116 * _tmp136;
  const Scalar _tmp148 = _tmp123 * _tmp129 + _tmp147;
  const Scalar _tmp149 = -_tmp115 * _tmp137 + _tmp146 + _tmp148;
  const Scalar _tmp150 = _tmp100 * _tmp75 + _tmp80;
  const Scalar _tmp151 = _tmp105 * _tmp74 + _tmp107 * _tmp75 + _tmp109 * _tmp73;
  const Scalar _tmp152 = -_tmp18;
  const Scalar _tmp153 = _tmp152 + _tmp16;
  const Scalar _tmp154 = _tmp106 + _tmp31;
  const Scalar _tmp155 = -_tmp0;
  const Scalar _tmp156 = _tmp102 + _tmp155 + _tmp2 + _tmp27;
  const Scalar _tmp157 = _tmp153 * _tmp7 + _tmp154 * _tmp24 + _tmp156 * _tmp20;
  const Scalar _tmp158 = _tmp155 + _tmp98;
  const Scalar _tmp159 = _tmp104 + _tmp158;
  const Scalar _tmp160 = _tmp159 * _tmp7 + _tmp25;
  const Scalar _tmp161 = -_tmp125 + _tmp126 - _tmp127 + _tmp128;
  const Scalar _tmp162 = 2 * _tmp161;
  const Scalar _tmp163 = -_tmp132 + _tmp133 + _tmp134 - _tmp135;
  const Scalar _tmp164 = 2 * _tmp163;
  const Scalar _tmp165 = _tmp142 + _tmp164 * _tmp63;
  const Scalar _tmp166 = _tmp141 - _tmp162 * _tmp64 + _tmp165;
  const Scalar _tmp167 = _tmp130 * _tmp161;
  const Scalar _tmp168 = -_tmp164 * _tmp51;
  const Scalar _tmp169 = _tmp117 + _tmp168;
  const Scalar _tmp170 = _tmp124 - _tmp167 + _tmp169;
  const Scalar _tmp171 = -_tmp162 * _tmp51;
  const Scalar _tmp172 = _tmp116 * _tmp122;
  const Scalar _tmp173 = _tmp130 * _tmp163;
  const Scalar _tmp174 = _tmp115 * _tmp123 + _tmp173;
  const Scalar _tmp175 = _tmp171 - _tmp172 + _tmp174;
  const Scalar _tmp176 = _tmp153 * _tmp73 + _tmp154 * _tmp74 + _tmp156 * _tmp75;
  const Scalar _tmp177 = _tmp159 * _tmp73 + _tmp76;
  const Scalar _tmp178 = _tmp2 + _tmp97;
  const Scalar _tmp179 = _tmp158 + _tmp178;
  const Scalar _tmp180 = _tmp179 * _tmp24 + _tmp35;
  const Scalar _tmp181 = _tmp103 + _tmp178;
  const Scalar _tmp182 = _tmp15 + _tmp152;
  const Scalar _tmp183 = _tmp108 + _tmp33;
  const Scalar _tmp184 = _tmp181 * _tmp7 + _tmp182 * _tmp20 + _tmp183 * _tmp24;
  const Scalar _tmp185 = _tmp111 + _tmp112 - _tmp113 - _tmp114;
  const Scalar _tmp186 = _tmp137 * _tmp185;
  const Scalar _tmp187 = _tmp162 * _tmp63 + _tmp186;
  const Scalar _tmp188 = -_tmp146 + _tmp147 + _tmp187;
  const Scalar _tmp189 = _tmp123 * _tmp185 + _tmp171;
  const Scalar _tmp190 = -_tmp130 * _tmp136 + _tmp172 + _tmp189;
  const Scalar _tmp191 = -_tmp116 * _tmp185;
  const Scalar _tmp192 = _tmp124 - _tmp138 + _tmp167 + _tmp191;
  const Scalar _tmp193 = _tmp179 * _tmp74 + _tmp78;
  const Scalar _tmp194 = _tmp181 * _tmp73 + _tmp182 * _tmp75 + _tmp183 * _tmp74;
  const Scalar _tmp195 = _tmp34 * sum_dt;
  const Scalar _tmp196 = _tmp23 * sum_dt;
  const Scalar _tmp197 = Scalar(0.5) * _delta_q[3];
  const Scalar _tmp198 = Scalar(0.5) * _delta_q[1];
  const Scalar _tmp199 = Scalar(0.5) * _delta_q[2];
  const Scalar _tmp200 = _tmp197 * dq_dbg(0, 0) + _tmp198 * dq_dbg(2, 0) - _tmp199 * dq_dbg(1, 0);
  const Scalar _tmp201 = 2 * _tmp69;
  const Scalar _tmp202 = Scalar(0.5) * _delta_q[0];
  const Scalar _tmp203 = _tmp197 * dq_dbg(2, 0) - _tmp198 * dq_dbg(0, 0) + _tmp202 * dq_dbg(1, 0);
  const Scalar _tmp204 = 2 * _tmp47;
  const Scalar _tmp205 = _tmp197 * dq_dbg(1, 0) + _tmp199 * dq_dbg(0, 0) - _tmp202 * dq_dbg(2, 0);
  const Scalar _tmp206 = 2 * _tmp56;
  const Scalar _tmp207 = -_tmp198 * dq_dbg(1, 0) - _tmp199 * dq_dbg(2, 0) - _tmp202 * dq_dbg(0, 0);
  const Scalar _tmp208 = 2 * _tmp62;
  const Scalar _tmp209 =
      -_tmp200 * _tmp201 + _tmp203 * _tmp204 - _tmp205 * _tmp206 + _tmp207 * _tmp208;
  const Scalar _tmp210 =
      _tmp200 * _tmp206 - _tmp201 * _tmp205 - _tmp203 * _tmp208 + _tmp204 * _tmp207;
  const Scalar _tmp211 =
      -_tmp200 * _tmp204 - _tmp201 * _tmp203 + _tmp205 * _tmp208 + _tmp206 * _tmp207;
  const Scalar _tmp212 = _tmp197 * dq_dbg(0, 1) + _tmp198 * dq_dbg(2, 1) - _tmp199 * dq_dbg(1, 1);
  const Scalar _tmp213 = _tmp197 * dq_dbg(2, 1) - _tmp198 * dq_dbg(0, 1) + _tmp202 * dq_dbg(1, 1);
  const Scalar _tmp214 = _tmp197 * dq_dbg(1, 1) + _tmp199 * dq_dbg(0, 1) - _tmp202 * dq_dbg(2, 1);
  const Scalar _tmp215 = -_tmp198 * dq_dbg(1, 1) - _tmp199 * dq_dbg(2, 1) - _tmp202 * dq_dbg(0, 1);
  const Scalar _tmp216 =
      -_tmp201 * _tmp212 + _tmp204 * _tmp213 - _tmp206 * _tmp214 + _tmp208 * _tmp215;
  const Scalar _tmp217 =
      -_tmp201 * _tmp214 + _tmp204 * _tmp215 + _tmp206 * _tmp212 - _tmp208 * _tmp213;
  const Scalar _tmp218 =
      -_tmp201 * _tmp213 - _tmp204 * _tmp212 + _tmp206 * _tmp215 + _tmp208 * _tmp214;
  const Scalar _tmp219 = _tmp197 * dq_dbg(0, 2) + _tmp198 * dq_dbg(2, 2) - _tmp199 * dq_dbg(1, 2);
  const Scalar _tmp220 = _tmp197 * dq_dbg(2, 2) - _tmp198 * dq_dbg(0, 2) + _tmp202 * dq_dbg(1, 2);
  const Scalar _tmp221 = _tmp197 * dq_dbg(1, 2) + _tmp199 * dq_dbg(0, 2) - _tmp202 * dq_dbg(2, 2);
  const Scalar _tmp222 = -_tmp198 * dq_dbg(1, 2) - _tmp199 * dq_dbg(2, 2) - _tmp202 * dq_dbg(0, 2);
  const Scalar _tmp223 =
      -_tmp201 * _tmp219 + _tmp204 * _tmp220 - _tmp206 * _tmp221 + _tmp208 * _tmp222;
  const Scalar _tmp224 =
      -_tmp201 * _tmp221 + _tmp204 * _tmp222 + _tmp206 * _tmp219 - _tmp208 * _tmp220;
  const Scalar _tmp225 =
      -_tmp201 * _tmp220 - _tmp204 * _tmp219 + _tmp206 * _tmp222 + _tmp208 * _tmp221;
  const Scalar _tmp226 = _tmp118 + _tmp119 + _tmp120 + _tmp121;
  const Scalar _tmp227 = _tmp123 * _tmp226;
  const Scalar _tmp228 = _tmp191 + _tmp227;
  const Scalar _tmp229 = _tmp139 + _tmp228;
  const Scalar _tmp230 = _tmp137 * _tmp226;
  const Scalar _tmp231 = -_tmp130 * _tmp185 + _tmp144 - _tmp230;
  const Scalar _tmp232 = _tmp130 * _tmp226;
  const Scalar _tmp233 = _tmp148 - _tmp186 + _tmp232;
  const Scalar _tmp234 = -_tmp143 + _tmp165 + _tmp230;
  const Scalar _tmp235 = _tmp131 + _tmp169 + _tmp227;
  const Scalar _tmp236 = _tmp116 * _tmp226;
  const Scalar _tmp237 = -_tmp129 * _tmp137 + _tmp174 - _tmp236;
  const Scalar _tmp238 = -_tmp164 * _tmp64 + _tmp187 - _tmp232;
  const Scalar _tmp239 = -_tmp173 + _tmp189 + _tmp236;
  const Scalar _tmp240 = _tmp167 + _tmp168 + _tmp228;
  const Scalar _tmp241 = std::pow(_tmp38, Scalar(2));
  const Scalar _tmp242 = std::pow(_tmp4, Scalar(2));
  const Scalar _tmp243 = std::pow(_tmp34, Scalar(2));
  const Scalar _tmp244 = _tmp241 + _tmp242 + _tmp243;
  const Scalar _tmp245 = _tmp38 * _tmp40;
  const Scalar _tmp246 = _tmp29 * _tmp34;
  const Scalar _tmp247 = _tmp23 * _tmp4;
  const Scalar _tmp248 = _tmp245 + _tmp246 + _tmp247;
  const Scalar _tmp249 = _tmp19 * _tmp4;
  const Scalar _tmp250 = _tmp37 * _tmp38;
  const Scalar _tmp251 = _tmp32 * _tmp34;
  const Scalar _tmp252 = _tmp249 + _tmp250 + _tmp251;
  const Scalar _tmp253 = _tmp101 * _tmp34;
  const Scalar _tmp254 = _tmp110 * _tmp38;
  const Scalar _tmp255 = _tmp160 * _tmp38;
  const Scalar _tmp256 = _tmp157 * _tmp4;
  const Scalar _tmp257 = _tmp184 * _tmp34;
  const Scalar _tmp258 = _tmp180 * _tmp4;
  const Scalar _tmp259 = _tmp242 * sum_dt;
  const Scalar _tmp260 = _tmp241 * sum_dt;
  const Scalar _tmp261 = _tmp243 * sum_dt;
  const Scalar _tmp262 = _tmp196 * _tmp4;
  const Scalar _tmp263 = _tmp195 * _tmp29;
  const Scalar _tmp264 = _tmp245 * sum_dt;
  const Scalar _tmp265 = _tmp262 + _tmp263 + _tmp264;
  const Scalar _tmp266 = _tmp195 * _tmp32;
  const Scalar _tmp267 = _tmp250 * sum_dt;
  const Scalar _tmp268 = _tmp249 * sum_dt;
  const Scalar _tmp269 = _tmp266 + _tmp267 + _tmp268;
  const Scalar _tmp270 = _tmp34 * dp_dba(1, 0);
  const Scalar _tmp271 = _tmp4 * dp_dba(0, 0);
  const Scalar _tmp272 = _tmp38 * dp_dba(2, 0);
  const Scalar _tmp273 = _tmp34 * dp_dba(1, 1);
  const Scalar _tmp274 = _tmp4 * dp_dba(0, 1);
  const Scalar _tmp275 = _tmp38 * dp_dba(2, 1);
  const Scalar _tmp276 = _tmp34 * dp_dba(1, 2);
  const Scalar _tmp277 = _tmp4 * dp_dba(0, 2);
  const Scalar _tmp278 = _tmp38 * dp_dba(2, 2);
  const Scalar _tmp279 = _tmp34 * dp_dbg(1, 0);
  const Scalar _tmp280 = _tmp4 * dp_dbg(0, 0);
  const Scalar _tmp281 = _tmp38 * dp_dbg(2, 0);
  const Scalar _tmp282 = _tmp34 * dp_dbg(1, 1);
  const Scalar _tmp283 = _tmp4 * dp_dbg(0, 1);
  const Scalar _tmp284 = _tmp38 * dp_dbg(2, 1);
  const Scalar _tmp285 = _tmp34 * dp_dbg(1, 2);
  const Scalar _tmp286 = _tmp4 * dp_dbg(0, 2);
  const Scalar _tmp287 = _tmp38 * dp_dbg(2, 2);
  const Scalar _tmp288 = -_tmp241 - _tmp242 - _tmp243;
  const Scalar _tmp289 = -_tmp245 - _tmp246 - _tmp247;
  const Scalar _tmp290 = -_tmp249 - _tmp250 - _tmp251;
  const Scalar _tmp291 = std::pow(_tmp40, Scalar(2));
  const Scalar _tmp292 = std::pow(_tmp29, Scalar(2));
  const Scalar _tmp293 = std::pow(_tmp23, Scalar(2));
  const Scalar _tmp294 = _tmp291 + _tmp292 + _tmp293;
  const Scalar _tmp295 = _tmp29 * _tmp32;
  const Scalar _tmp296 = _tmp37 * _tmp40;
  const Scalar _tmp297 = _tmp19 * _tmp23;
  const Scalar _tmp298 = _tmp295 + _tmp296 + _tmp297;
  const Scalar _tmp299 = _tmp110 * _tmp40;
  const Scalar _tmp300 = _tmp101 * _tmp29;
  const Scalar _tmp301 = _tmp157 * _tmp23;
  const Scalar _tmp302 = _tmp160 * _tmp40;
  const Scalar _tmp303 = _tmp180 * _tmp23;
  const Scalar _tmp304 = _tmp184 * _tmp29;
  const Scalar _tmp305 = _tmp292 * sum_dt;
  const Scalar _tmp306 = _tmp291 * sum_dt;
  const Scalar _tmp307 = _tmp293 * sum_dt;
  const Scalar _tmp308 = _tmp19 * _tmp196;
  const Scalar _tmp309 = _tmp296 * sum_dt;
  const Scalar _tmp310 = _tmp295 * sum_dt;
  const Scalar _tmp311 = _tmp308 + _tmp309 + _tmp310;
  const Scalar _tmp312 = _tmp23 * dp_dba(0, 0);
  const Scalar _tmp313 = _tmp29 * dp_dba(1, 0);
  const Scalar _tmp314 = _tmp40 * dp_dba(2, 0);
  const Scalar _tmp315 = _tmp23 * dp_dba(0, 1);
  const Scalar _tmp316 = _tmp29 * dp_dba(1, 1);
  const Scalar _tmp317 = _tmp40 * dp_dba(2, 1);
  const Scalar _tmp318 = _tmp23 * dp_dba(0, 2);
  const Scalar _tmp319 = _tmp29 * dp_dba(1, 2);
  const Scalar _tmp320 = _tmp40 * dp_dba(2, 2);
  const Scalar _tmp321 = _tmp23 * dp_dbg(0, 0);
  const Scalar _tmp322 = _tmp29 * dp_dbg(1, 0);
  const Scalar _tmp323 = _tmp40 * dp_dbg(2, 0);
  const Scalar _tmp324 = _tmp23 * dp_dbg(0, 1);
  const Scalar _tmp325 = _tmp29 * dp_dbg(1, 1);
  const Scalar _tmp326 = _tmp40 * dp_dbg(2, 1);
  const Scalar _tmp327 = _tmp23 * dp_dbg(0, 2);
  const Scalar _tmp328 = _tmp29 * dp_dbg(1, 2);
  const Scalar _tmp329 = _tmp40 * dp_dbg(2, 2);
  const Scalar _tmp330 = -_tmp291 - _tmp292 - _tmp293;
  const Scalar _tmp331 = -_tmp295 - _tmp296 - _tmp297;
  const Scalar _tmp332 = std::pow(_tmp19, Scalar(2));
  const Scalar _tmp333 = std::pow(_tmp32, Scalar(2));
  const Scalar _tmp334 = std::pow(_tmp37, Scalar(2));
  const Scalar _tmp335 = _tmp332 + _tmp333 + _tmp334;
  const Scalar _tmp336 = _tmp110 * _tmp37;
  const Scalar _tmp337 = _tmp101 * _tmp32;
  const Scalar _tmp338 = _tmp160 * _tmp37;
  const Scalar _tmp339 = _tmp157 * _tmp19;
  const Scalar _tmp340 = _tmp184 * _tmp32;
  const Scalar _tmp341 = _tmp180 * _tmp19;
  const Scalar _tmp342 = _tmp334 * sum_dt;
  const Scalar _tmp343 = _tmp333 * sum_dt;
  const Scalar _tmp344 = _tmp332 * sum_dt;
  const Scalar _tmp345 = _tmp37 * dp_dba(2, 0);
  const Scalar _tmp346 = _tmp32 * dp_dba(1, 0);
  const Scalar _tmp347 = _tmp19 * dp_dba(0, 0);
  const Scalar _tmp348 = _tmp37 * dp_dba(2, 1);
  const Scalar _tmp349 = _tmp32 * dp_dba(1, 1);
  const Scalar _tmp350 = _tmp19 * dp_dba(0, 1);
  const Scalar _tmp351 = _tmp37 * dp_dba(2, 2);
  const Scalar _tmp352 = _tmp32 * dp_dba(1, 2);
  const Scalar _tmp353 = _tmp19 * dp_dba(0, 2);
  const Scalar _tmp354 = _tmp37 * dp_dbg(2, 0);
  const Scalar _tmp355 = _tmp32 * dp_dbg(1, 0);
  const Scalar _tmp356 = _tmp19 * dp_dbg(0, 0);
  const Scalar _tmp357 = _tmp37 * dp_dbg(2, 1);
  const Scalar _tmp358 = _tmp32 * dp_dbg(1, 1);
  const Scalar _tmp359 = _tmp19 * dp_dbg(0, 1);
  const Scalar _tmp360 = _tmp37 * dp_dbg(2, 2);
  const Scalar _tmp361 = _tmp32 * dp_dbg(1, 2);
  const Scalar _tmp362 = _tmp19 * dp_dbg(0, 2);
  const Scalar _tmp363 = -_tmp332 - _tmp333 - _tmp334;
  const Scalar _tmp364 = _tmp150 * _tmp34;
  const Scalar _tmp365 = _tmp151 * _tmp38;
  const Scalar _tmp366 = _tmp150 * _tmp29;
  const Scalar _tmp367 = _tmp151 * _tmp40;
  const Scalar _tmp368 = _tmp150 * _tmp32;
  const Scalar _tmp369 = _tmp151 * _tmp37;
  const Scalar _tmp370 = _tmp176 * _tmp4;
  const Scalar _tmp371 = _tmp177 * _tmp38;
  const Scalar _tmp372 = _tmp176 * _tmp23;
  const Scalar _tmp373 = _tmp177 * _tmp40;
  const Scalar _tmp374 = _tmp176 * _tmp19;
  const Scalar _tmp375 = _tmp177 * _tmp37;
  const Scalar _tmp376 = _tmp193 * _tmp4;
  const Scalar _tmp377 = _tmp194 * _tmp34;
  const Scalar _tmp378 = _tmp194 * _tmp29;
  const Scalar _tmp379 = _tmp193 * _tmp23;
  const Scalar _tmp380 = _tmp19 * _tmp193;
  const Scalar _tmp381 = _tmp194 * _tmp32;
  const Scalar _tmp382 = _tmp34 * dv_dba(1, 0);
  const Scalar _tmp383 = _tmp4 * dv_dba(0, 0);
  const Scalar _tmp384 = _tmp38 * dv_dba(2, 0);
  const Scalar _tmp385 = _tmp34 * dv_dba(1, 1);
  const Scalar _tmp386 = _tmp4 * dv_dba(0, 1);
  const Scalar _tmp387 = _tmp38 * dv_dba(2, 1);
  const Scalar _tmp388 = _tmp34 * dv_dba(1, 2);
  const Scalar _tmp389 = _tmp4 * dv_dba(0, 2);
  const Scalar _tmp390 = _tmp38 * dv_dba(2, 2);
  const Scalar _tmp391 = _tmp34 * dv_dbg(1, 0);
  const Scalar _tmp392 = _tmp4 * dv_dbg(0, 0);
  const Scalar _tmp393 = _tmp38 * dv_dbg(2, 0);
  const Scalar _tmp394 = _tmp34 * dv_dbg(1, 1);
  const Scalar _tmp395 = _tmp4 * dv_dbg(0, 1);
  const Scalar _tmp396 = _tmp38 * dv_dbg(2, 1);
  const Scalar _tmp397 = _tmp34 * dv_dbg(1, 2);
  const Scalar _tmp398 = _tmp4 * dv_dbg(0, 2);
  const Scalar _tmp399 = _tmp38 * dv_dbg(2, 2);
  const Scalar _tmp400 = -_tmp262 - _tmp263 - _tmp264;
  const Scalar _tmp401 = -_tmp266 - _tmp267 - _tmp268;
  const Scalar _tmp402 = _tmp23 * dv_dba(0, 0);
  const Scalar _tmp403 = _tmp29 * dv_dba(1, 0);
  const Scalar _tmp404 = _tmp40 * dv_dba(2, 0);
  const Scalar _tmp405 = _tmp23 * dv_dba(0, 1);
  const Scalar _tmp406 = _tmp29 * dv_dba(1, 1);
  const Scalar _tmp407 = _tmp40 * dv_dba(2, 1);
  const Scalar _tmp408 = _tmp23 * dv_dba(0, 2);
  const Scalar _tmp409 = _tmp29 * dv_dba(1, 2);
  const Scalar _tmp410 = _tmp40 * dv_dba(2, 2);
  const Scalar _tmp411 = _tmp23 * dv_dbg(0, 0);
  const Scalar _tmp412 = _tmp29 * dv_dbg(1, 0);
  const Scalar _tmp413 = _tmp40 * dv_dbg(2, 0);
  const Scalar _tmp414 = _tmp23 * dv_dbg(0, 1);
  const Scalar _tmp415 = _tmp29 * dv_dbg(1, 1);
  const Scalar _tmp416 = _tmp40 * dv_dbg(2, 1);
  const Scalar _tmp417 = _tmp23 * dv_dbg(0, 2);
  const Scalar _tmp418 = _tmp29 * dv_dbg(1, 2);
  const Scalar _tmp419 = _tmp40 * dv_dbg(2, 2);
  const Scalar _tmp420 = -_tmp308 - _tmp309 - _tmp310;
  const Scalar _tmp421 = _tmp37 * dv_dba(2, 0);
  const Scalar _tmp422 = _tmp32 * dv_dba(1, 0);
  const Scalar _tmp423 = _tmp19 * dv_dba(0, 0);
  const Scalar _tmp424 = _tmp37 * dv_dba(2, 1);
  const Scalar _tmp425 = _tmp32 * dv_dba(1, 1);
  const Scalar _tmp426 = _tmp19 * dv_dba(0, 1);
  const Scalar _tmp427 = _tmp37 * dv_dba(2, 2);
  const Scalar _tmp428 = _tmp32 * dv_dba(1, 2);
  const Scalar _tmp429 = _tmp19 * dv_dba(0, 2);
  const Scalar _tmp430 = _tmp37 * dv_dbg(2, 0);
  const Scalar _tmp431 = _tmp32 * dv_dbg(1, 0);
  const Scalar _tmp432 = _tmp19 * dv_dbg(0, 0);
  const Scalar _tmp433 = _tmp37 * dv_dbg(2, 1);
  const Scalar _tmp434 = _tmp32 * dv_dbg(1, 1);
  const Scalar _tmp435 = _tmp19 * dv_dbg(0, 1);
  const Scalar _tmp436 = _tmp37 * dv_dbg(2, 2);
  const Scalar _tmp437 = _tmp32 * dv_dbg(1, 2);
  const Scalar _tmp438 = _tmp19 * dv_dbg(0, 2);
  const Scalar _tmp439 = _tmp38 * _tmp42;
  const Scalar _tmp440 = _tmp34 * _tmp36;
  const Scalar _tmp441 = _tmp26 * _tmp4;
  const Scalar _tmp442 = _tmp40 * _tmp42;
  const Scalar _tmp443 = _tmp23 * _tmp26;
  const Scalar _tmp444 = _tmp29 * _tmp36;
  const Scalar _tmp445 = _tmp37 * _tmp42;
  const Scalar _tmp446 = _tmp19 * _tmp26;
  const Scalar _tmp447 = _tmp32 * _tmp36;
  const Scalar _tmp448 = _tmp34 * _tmp79;
  const Scalar _tmp449 = _tmp4 * _tmp77;
  const Scalar _tmp450 = _tmp38 * _tmp81;
  const Scalar _tmp451 = _tmp23 * _tmp77;
  const Scalar _tmp452 = _tmp29 * _tmp79;
  const Scalar _tmp453 = _tmp40 * _tmp81;
  const Scalar _tmp454 = _tmp32 * _tmp79;
  const Scalar _tmp455 = _tmp19 * _tmp77;
  const Scalar _tmp456 = _tmp37 * _tmp81;

  // Output terms (4)
  if (res != nullptr) {
    Eigen::Matrix<Scalar, 15, 1>& _res = (*res);

    _res(0, 0) = _tmp26;
    _res(1, 0) = _tmp36;
    _res(2, 0) = _tmp42;
    _res(3, 0) = _tmp70;
    _res(4, 0) = _tmp71;
    _res(5, 0) = _tmp72;
    _res(6, 0) = _tmp77;
    _res(7, 0) = _tmp79;
    _res(8, 0) = _tmp81;
    _res(9, 0) = _tmp82;
    _res(10, 0) = _tmp83;
    _res(11, 0) = _tmp84;
    _res(12, 0) = _tmp85;
    _res(13, 0) = _tmp86;
    _res(14, 0) = _tmp87;
  }

  if (jacobian != nullptr) {
    Eigen::Matrix<Scalar, 15, 30>& _jacobian = (*jacobian);

    _jacobian.setZero();

    _jacobian(0, 0) = _tmp88;
    _jacobian(1, 0) = _tmp89;
    _jacobian(2, 0) = _tmp90;
    _jacobian(0, 1) = _tmp91;
    _jacobian(1, 1) = _tmp92;
    _jacobian(2, 1) = _tmp93;
    _jacobian(0, 2) = _tmp94;
    _jacobian(1, 2) = _tmp95;
    _jacobian(2, 2) = _tmp96;
    _jacobian(1, 3) = _tmp101;
    _jacobian(2, 3) = _tmp110;
    _jacobian(3, 3) = _tmp140;
    _jacobian(4, 3) = _tmp145;
    _jacobian(5, 3) = _tmp149;
    _jacobian(7, 3) = _tmp150;
    _jacobian(8, 3) = _tmp151;
    _jacobian(0, 4) = _tmp157;
    _jacobian(2, 4) = _tmp160;
    _jacobian(3, 4) = _tmp166;
    _jacobian(4, 4) = _tmp170;
    _jacobian(5, 4) = _tmp175;
    _jacobian(6, 4) = _tmp176;
    _jacobian(8, 4) = _tmp177;
    _jacobian(0, 5) = _tmp180;
    _jacobian(1, 5) = _tmp184;
    _jacobian(3, 5) = _tmp188;
    _jacobian(4, 5) = _tmp190;
    _jacobian(5, 5) = _tmp192;
    _jacobian(6, 5) = _tmp193;
    _jacobian(7, 5) = _tmp194;
    _jacobian(0, 6) = -_tmp4 * sum_dt;
    _jacobian(1, 6) = -_tmp195;
    _jacobian(2, 6) = -_tmp38 * sum_dt;
    _jacobian(6, 6) = _tmp88;
    _jacobian(7, 6) = _tmp89;
    _jacobian(8, 6) = _tmp90;
    _jacobian(0, 7) = -_tmp196;
    _jacobian(1, 7) = -_tmp29 * sum_dt;
    _jacobian(2, 7) = -_tmp40 * sum_dt;
    _jacobian(6, 7) = _tmp91;
    _jacobian(7, 7) = _tmp92;
    _jacobian(8, 7) = _tmp93;
    _jacobian(0, 8) = -_tmp19 * sum_dt;
    _jacobian(1, 8) = -_tmp32 * sum_dt;
    _jacobian(2, 8) = -_tmp37 * sum_dt;
    _jacobian(6, 8) = _tmp94;
    _jacobian(7, 8) = _tmp95;
    _jacobian(8, 8) = _tmp96;
    _jacobian(0, 9) = -dp_dba(0, 0);
    _jacobian(1, 9) = -dp_dba(1, 0);
    _jacobian(2, 9) = -dp_dba(2, 0);
    _jacobian(6, 9) = -dv_dba(0, 0);
    _jacobian(7, 9) = -dv_dba(1, 0);
    _jacobian(8, 9) = -dv_dba(2, 0);
    _jacobian(9, 9) = -1;
    _jacobian(0, 10) = -dp_dba(0, 1);
    _jacobian(1, 10) = -dp_dba(1, 1);
    _jacobian(2, 10) = -dp_dba(2, 1);
    _jacobian(6, 10) = -dv_dba(0, 1);
    _jacobian(7, 10) = -dv_dba(1, 1);
    _jacobian(8, 10) = -dv_dba(2, 1);
    _jacobian(10, 10) = -1;
    _jacobian(0, 11) = -dp_dba(0, 2);
    _jacobian(1, 11) = -dp_dba(1, 2);
    _jacobian(2, 11) = -dp_dba(2, 2);
    _jacobian(6, 11) = -dv_dba(0, 2);
    _jacobian(7, 11) = -dv_dba(1, 2);
    _jacobian(8, 11) = -dv_dba(2, 2);
    _jacobian(11, 11) = -1;
    _jacobian(0, 12) = -dp_dbg(0, 0);
    _jacobian(1, 12) = -dp_dbg(1, 0);
    _jacobian(2, 12) = -dp_dbg(2, 0);
    _jacobian(3, 12) = _tmp209;
    _jacobian(4, 12) = _tmp210;
    _jacobian(5, 12) = _tmp211;
    _jacobian(6, 12) = -dv_dbg(0, 0);
    _jacobian(7, 12) = -dv_dbg(1, 0);
    _jacobian(8, 12) = -dv_dbg(2, 0);
    _jacobian(12, 12) = -1;
    _jacobian(0, 13) = -dp_dbg(0, 1);
    _jacobian(1, 13) = -dp_dbg(1, 1);
    _jacobian(2, 13) = -dp_dbg(2, 1);
    _jacobian(3, 13) = _tmp216;
    _jacobian(4, 13) = _tmp217;
    _jacobian(5, 13) = _tmp218;
    _jacobian(6, 13) = -dv_dbg(0, 1);
    _jacobian(7, 13) = -dv_dbg(1, 1);
    _jacobian(8, 13) = -dv_dbg(2, 1);
    _jacobian(13, 13) = -1;
    _jacobian(0, 14) = -dp_dbg(0, 2);
    _jacobian(1, 14) = -dp_dbg(1, 2);
    _jacobian(2, 14) = -dp_dbg(2, 2);
    _jacobian(3, 14) = _tmp223;
    _jacobian(4, 14) = _tmp224;
    _jacobian(5, 14) = _tmp225;
    _jacobian(6, 14) = -dv_dbg(0, 2);
    _jacobian(7, 14) = -dv_dbg(1, 2);
    _jacobian(8, 14) = -dv_dbg(2, 2);
    _jacobian(14, 14) = -1;
    _jacobian(0, 15) = _tmp4;
    _jacobian(1, 15) = _tmp34;
    _jacobian(2, 15) = _tmp38;
    _jacobian(0, 16) = _tmp23;
    _jacobian(1, 16) = _tmp29;
    _jacobian(2, 16) = _tmp40;
    _jacobian(0, 17) = _tmp19;
    _jacobian(1, 17) = _tmp32;
    _jacobian(2, 17) = _tmp37;
    _jacobian(3, 18) = _tmp229;
    _jacobian(4, 18) = _tmp231;
    _jacobian(5, 18) = _tmp233;
    _jacobian(3, 19) = _tmp234;
    _jacobian(4, 19) = _tmp235;
    _jacobian(5, 19) = _tmp237;
    _jacobian(3, 20) = _tmp238;
    _jacobian(4, 20) = _tmp239;
    _jacobian(5, 20) = _tmp240;
    _jacobian(6, 21) = _tmp4;
    _jacobian(7, 21) = _tmp34;
    _jacobian(8, 21) = _tmp38;
    _jacobian(6, 22) = _tmp23;
    _jacobian(7, 22) = _tmp29;
    _jacobian(8, 22) = _tmp40;
    _jacobian(6, 23) = _tmp19;
    _jacobian(7, 23) = _tmp32;
    _jacobian(8, 23) = _tmp37;
    _jacobian(9, 24) = 1;
    _jacobian(10, 25) = 1;
    _jacobian(11, 26) = 1;
    _jacobian(12, 27) = 1;
    _jacobian(13, 28) = 1;
    _jacobian(14, 29) = 1;
  }

  if (hessian != nullptr) {
    Eigen::Matrix<Scalar, 30, 30>& _hessian = (*hessian);

    _hessian.setZero();

    _hessian(0, 0) = _tmp244;
    _hessian(1, 0) = _tmp248;
    _hessian(2, 0) = _tmp252;
    _hessian(3, 0) = -_tmp253 - _tmp254;
    _hessian(4, 0) = -_tmp255 - _tmp256;
    _hessian(5, 0) = -_tmp257 - _tmp258;
    _hessian(6, 0) = _tmp259 + _tmp260 + _tmp261;
    _hessian(7, 0) = _tmp265;
    _hessian(8, 0) = _tmp269;
    _hessian(9, 0) = _tmp270 + _tmp271 + _tmp272;
    _hessian(10, 0) = _tmp273 + _tmp274 + _tmp275;
    _hessian(11, 0) = _tmp276 + _tmp277 + _tmp278;
    _hessian(12, 0) = _tmp279 + _tmp280 + _tmp281;
    _hessian(13, 0) = _tmp282 + _tmp283 + _tmp284;
    _hessian(14, 0) = _tmp285 + _tmp286 + _tmp287;
    _hessian(15, 0) = _tmp288;
    _hessian(16, 0) = _tmp289;
    _hessian(17, 0) = _tmp290;
    _hessian(1, 1) = _tmp294;
    _hessian(2, 1) = _tmp298;
    _hessian(3, 1) = -_tmp299 - _tmp300;
    _hessian(4, 1) = -_tmp301 - _tmp302;
    _hessian(5, 1) = -_tmp303 - _tmp304;
    _hessian(6, 1) = _tmp265;
    _hessian(7, 1) = _tmp305 + _tmp306 + _tmp307;
    _hessian(8, 1) = _tmp311;
    _hessian(9, 1) = _tmp312 + _tmp313 + _tmp314;
    _hessian(10, 1) = _tmp315 + _tmp316 + _tmp317;
    _hessian(11, 1) = _tmp318 + _tmp319 + _tmp320;
    _hessian(12, 1) = _tmp321 + _tmp322 + _tmp323;
    _hessian(13, 1) = _tmp324 + _tmp325 + _tmp326;
    _hessian(14, 1) = _tmp327 + _tmp328 + _tmp329;
    _hessian(15, 1) = _tmp289;
    _hessian(16, 1) = _tmp330;
    _hessian(17, 1) = _tmp331;
    _hessian(2, 2) = _tmp335;
    _hessian(3, 2) = -_tmp336 - _tmp337;
    _hessian(4, 2) = -_tmp338 - _tmp339;
    _hessian(5, 2) = -_tmp340 - _tmp341;
    _hessian(6, 2) = _tmp269;
    _hessian(7, 2) = _tmp311;
    _hessian(8, 2) = _tmp342 + _tmp343 + _tmp344;
    _hessian(9, 2) = _tmp345 + _tmp346 + _tmp347;
    _hessian(10, 2) = _tmp348 + _tmp349 + _tmp350;
    _hessian(11, 2) = _tmp351 + _tmp352 + _tmp353;
    _hessian(12, 2) = _tmp354 + _tmp355 + _tmp356;
    _hessian(13, 2) = _tmp357 + _tmp358 + _tmp359;
    _hessian(14, 2) = _tmp360 + _tmp361 + _tmp362;
    _hessian(15, 2) = _tmp290;
    _hessian(16, 2) = _tmp331;
    _hessian(17, 2) = _tmp363;
    _hessian(3, 3) = std::pow(_tmp101, Scalar(2)) + std::pow(_tmp110, Scalar(2)) +
                     std::pow(_tmp140, Scalar(2)) + std::pow(_tmp145, Scalar(2)) +
                     std::pow(_tmp149, Scalar(2)) + std::pow(_tmp150, Scalar(2)) +
                     std::pow(_tmp151, Scalar(2));
    _hessian(4, 3) = _tmp110 * _tmp160 + _tmp140 * _tmp166 + _tmp145 * _tmp170 + _tmp149 * _tmp175 +
                     _tmp151 * _tmp177;
    _hessian(5, 3) = _tmp101 * _tmp184 + _tmp140 * _tmp188 + _tmp145 * _tmp190 + _tmp149 * _tmp192 +
                     _tmp150 * _tmp194;
    _hessian(6, 3) = -_tmp101 * _tmp195 - _tmp254 * sum_dt - _tmp364 - _tmp365;
    _hessian(7, 3) = -_tmp299 * sum_dt - _tmp300 * sum_dt - _tmp366 - _tmp367;
    _hessian(8, 3) = -_tmp336 * sum_dt - _tmp337 * sum_dt - _tmp368 - _tmp369;
    _hessian(9, 3) = -_tmp101 * dp_dba(1, 0) - _tmp110 * dp_dba(2, 0) - _tmp150 * dv_dba(1, 0) -
                     _tmp151 * dv_dba(2, 0);
    _hessian(10, 3) = -_tmp101 * dp_dba(1, 1) - _tmp110 * dp_dba(2, 1) - _tmp150 * dv_dba(1, 1) -
                      _tmp151 * dv_dba(2, 1);
    _hessian(11, 3) = -_tmp101 * dp_dba(1, 2) - _tmp110 * dp_dba(2, 2) - _tmp150 * dv_dba(1, 2) -
                      _tmp151 * dv_dba(2, 2);
    _hessian(12, 3) = -_tmp101 * dp_dbg(1, 0) - _tmp110 * dp_dbg(2, 0) + _tmp140 * _tmp209 +
                      _tmp145 * _tmp210 + _tmp149 * _tmp211 - _tmp150 * dv_dbg(1, 0) -
                      _tmp151 * dv_dbg(2, 0);
    _hessian(13, 3) = -_tmp101 * dp_dbg(1, 1) - _tmp110 * dp_dbg(2, 1) + _tmp140 * _tmp216 +
                      _tmp145 * _tmp217 + _tmp149 * _tmp218 - _tmp150 * dv_dbg(1, 1) -
                      _tmp151 * dv_dbg(2, 1);
    _hessian(14, 3) = -_tmp101 * dp_dbg(1, 2) - _tmp110 * dp_dbg(2, 2) + _tmp140 * _tmp223 +
                      _tmp145 * _tmp224 + _tmp149 * _tmp225 - _tmp150 * dv_dbg(1, 2) -
                      _tmp151 * dv_dbg(2, 2);
    _hessian(15, 3) = _tmp253 + _tmp254;
    _hessian(16, 3) = _tmp299 + _tmp300;
    _hessian(17, 3) = _tmp336 + _tmp337;
    _hessian(18, 3) = _tmp140 * _tmp229 + _tmp145 * _tmp231 + _tmp149 * _tmp233;
    _hessian(19, 3) = _tmp140 * _tmp234 + _tmp145 * _tmp235 + _tmp149 * _tmp237;
    _hessian(20, 3) = _tmp140 * _tmp238 + _tmp145 * _tmp239 + _tmp149 * _tmp240;
    _hessian(21, 3) = _tmp364 + _tmp365;
    _hessian(22, 3) = _tmp366 + _tmp367;
    _hessian(23, 3) = _tmp368 + _tmp369;
    _hessian(4, 4) = std::pow(_tmp157, Scalar(2)) + std::pow(_tmp160, Scalar(2)) +
                     std::pow(_tmp166, Scalar(2)) + std::pow(_tmp170, Scalar(2)) +
                     std::pow(_tmp175, Scalar(2)) + std::pow(_tmp176, Scalar(2)) +
                     std::pow(_tmp177, Scalar(2));
    _hessian(5, 4) = _tmp157 * _tmp180 + _tmp166 * _tmp188 + _tmp170 * _tmp190 + _tmp175 * _tmp192 +
                     _tmp176 * _tmp193;
    _hessian(6, 4) = -_tmp255 * sum_dt - _tmp256 * sum_dt - _tmp370 - _tmp371;
    _hessian(7, 4) = -_tmp157 * _tmp196 - _tmp302 * sum_dt - _tmp372 - _tmp373;
    _hessian(8, 4) = -_tmp338 * sum_dt - _tmp339 * sum_dt - _tmp374 - _tmp375;
    _hessian(9, 4) = -_tmp157 * dp_dba(0, 0) - _tmp160 * dp_dba(2, 0) - _tmp176 * dv_dba(0, 0) -
                     _tmp177 * dv_dba(2, 0);
    _hessian(10, 4) = -_tmp157 * dp_dba(0, 1) - _tmp160 * dp_dba(2, 1) - _tmp176 * dv_dba(0, 1) -
                      _tmp177 * dv_dba(2, 1);
    _hessian(11, 4) = -_tmp157 * dp_dba(0, 2) - _tmp160 * dp_dba(2, 2) - _tmp176 * dv_dba(0, 2) -
                      _tmp177 * dv_dba(2, 2);
    _hessian(12, 4) = -_tmp157 * dp_dbg(0, 0) - _tmp160 * dp_dbg(2, 0) + _tmp166 * _tmp209 +
                      _tmp170 * _tmp210 + _tmp175 * _tmp211 - _tmp176 * dv_dbg(0, 0) -
                      _tmp177 * dv_dbg(2, 0);
    _hessian(13, 4) = -_tmp157 * dp_dbg(0, 1) - _tmp160 * dp_dbg(2, 1) + _tmp166 * _tmp216 +
                      _tmp170 * _tmp217 + _tmp175 * _tmp218 - _tmp176 * dv_dbg(0, 1) -
                      _tmp177 * dv_dbg(2, 1);
    _hessian(14, 4) = -_tmp157 * dp_dbg(0, 2) - _tmp160 * dp_dbg(2, 2) + _tmp166 * _tmp223 +
                      _tmp170 * _tmp224 + _tmp175 * _tmp225 - _tmp176 * dv_dbg(0, 2) -
                      _tmp177 * dv_dbg(2, 2);
    _hessian(15, 4) = _tmp255 + _tmp256;
    _hessian(16, 4) = _tmp301 + _tmp302;
    _hessian(17, 4) = _tmp338 + _tmp339;
    _hessian(18, 4) = _tmp166 * _tmp229 + _tmp170 * _tmp231 + _tmp175 * _tmp233;
    _hessian(19, 4) = _tmp166 * _tmp234 + _tmp170 * _tmp235 + _tmp175 * _tmp237;
    _hessian(20, 4) = _tmp166 * _tmp238 + _tmp170 * _tmp239 + _tmp175 * _tmp240;
    _hessian(21, 4) = _tmp370 + _tmp371;
    _hessian(22, 4) = _tmp372 + _tmp373;
    _hessian(23, 4) = _tmp374 + _tmp375;
    _hessian(5, 5) = std::pow(_tmp180, Scalar(2)) + std::pow(_tmp184, Scalar(2)) +
                     std::pow(_tmp188, Scalar(2)) + std::pow(_tmp190, Scalar(2)) +
                     std::pow(_tmp192, Scalar(2)) + std::pow(_tmp193, Scalar(2)) +
                     std::pow(_tmp194, Scalar(2));
    _hessian(6, 5) = -_tmp184 * _tmp195 - _tmp258 * sum_dt - _tmp376 - _tmp377;
    _hessian(7, 5) = -_tmp303 * sum_dt - _tmp304 * sum_dt - _tmp378 - _tmp379;
    _hessian(8, 5) = -_tmp340 * sum_dt - _tmp341 * sum_dt - _tmp380 - _tmp381;
    _hessian(9, 5) = -_tmp180 * dp_dba(0, 0) - _tmp184 * dp_dba(1, 0) - _tmp193 * dv_dba(0, 0) -
                     _tmp194 * dv_dba(1, 0);
    _hessian(10, 5) = -_tmp180 * dp_dba(0, 1) - _tmp184 * dp_dba(1, 1) - _tmp193 * dv_dba(0, 1) -
                      _tmp194 * dv_dba(1, 1);
    _hessian(11, 5) = -_tmp180 * dp_dba(0, 2) - _tmp184 * dp_dba(1, 2) - _tmp193 * dv_dba(0, 2) -
                      _tmp194 * dv_dba(1, 2);
    _hessian(12, 5) = -_tmp180 * dp_dbg(0, 0) - _tmp184 * dp_dbg(1, 0) + _tmp188 * _tmp209 +
                      _tmp190 * _tmp210 + _tmp192 * _tmp211 - _tmp193 * dv_dbg(0, 0) -
                      _tmp194 * dv_dbg(1, 0);
    _hessian(13, 5) = -_tmp180 * dp_dbg(0, 1) - _tmp184 * dp_dbg(1, 1) + _tmp188 * _tmp216 +
                      _tmp190 * _tmp217 + _tmp192 * _tmp218 - _tmp193 * dv_dbg(0, 1) -
                      _tmp194 * dv_dbg(1, 1);
    _hessian(14, 5) = -_tmp180 * dp_dbg(0, 2) - _tmp184 * dp_dbg(1, 2) + _tmp188 * _tmp223 +
                      _tmp190 * _tmp224 + _tmp192 * _tmp225 - _tmp193 * dv_dbg(0, 2) -
                      _tmp194 * dv_dbg(1, 2);
    _hessian(15, 5) = _tmp257 + _tmp258;
    _hessian(16, 5) = _tmp303 + _tmp304;
    _hessian(17, 5) = _tmp340 + _tmp341;
    _hessian(18, 5) = _tmp188 * _tmp229 + _tmp190 * _tmp231 + _tmp192 * _tmp233;
    _hessian(19, 5) = _tmp188 * _tmp234 + _tmp190 * _tmp235 + _tmp192 * _tmp237;
    _hessian(20, 5) = _tmp188 * _tmp238 + _tmp190 * _tmp239 + _tmp192 * _tmp240;
    _hessian(21, 5) = _tmp376 + _tmp377;
    _hessian(22, 5) = _tmp378 + _tmp379;
    _hessian(23, 5) = _tmp380 + _tmp381;
    _hessian(6, 6) = _tmp241 * _tmp5 + _tmp242 * _tmp5 + _tmp243 * _tmp5 + _tmp244;
    _hessian(7, 6) = _tmp245 * _tmp5 + _tmp246 * _tmp5 + _tmp247 * _tmp5 + _tmp248;
    _hessian(8, 6) = _tmp249 * _tmp5 + _tmp250 * _tmp5 + _tmp251 * _tmp5 + _tmp252;
    _hessian(9, 6) =
        _tmp270 * sum_dt + _tmp271 * sum_dt + _tmp272 * sum_dt + _tmp382 + _tmp383 + _tmp384;
    _hessian(10, 6) =
        _tmp273 * sum_dt + _tmp274 * sum_dt + _tmp275 * sum_dt + _tmp385 + _tmp386 + _tmp387;
    _hessian(11, 6) =
        _tmp276 * sum_dt + _tmp277 * sum_dt + _tmp278 * sum_dt + _tmp388 + _tmp389 + _tmp390;
    _hessian(12, 6) =
        _tmp279 * sum_dt + _tmp280 * sum_dt + _tmp281 * sum_dt + _tmp391 + _tmp392 + _tmp393;
    _hessian(13, 6) =
        _tmp282 * sum_dt + _tmp283 * sum_dt + _tmp284 * sum_dt + _tmp394 + _tmp395 + _tmp396;
    _hessian(14, 6) =
        _tmp285 * sum_dt + _tmp286 * sum_dt + _tmp287 * sum_dt + _tmp397 + _tmp398 + _tmp399;
    _hessian(15, 6) = -_tmp259 - _tmp260 - _tmp261;
    _hessian(16, 6) = _tmp400;
    _hessian(17, 6) = _tmp401;
    _hessian(21, 6) = _tmp288;
    _hessian(22, 6) = _tmp289;
    _hessian(23, 6) = _tmp290;
    _hessian(7, 7) = _tmp291 * _tmp5 + _tmp292 * _tmp5 + _tmp293 * _tmp5 + _tmp294;
    _hessian(8, 7) = _tmp295 * _tmp5 + _tmp296 * _tmp5 + _tmp297 * _tmp5 + _tmp298;
    _hessian(9, 7) =
        _tmp312 * sum_dt + _tmp313 * sum_dt + _tmp314 * sum_dt + _tmp402 + _tmp403 + _tmp404;
    _hessian(10, 7) =
        _tmp315 * sum_dt + _tmp316 * sum_dt + _tmp317 * sum_dt + _tmp405 + _tmp406 + _tmp407;
    _hessian(11, 7) =
        _tmp318 * sum_dt + _tmp319 * sum_dt + _tmp320 * sum_dt + _tmp408 + _tmp409 + _tmp410;
    _hessian(12, 7) =
        _tmp321 * sum_dt + _tmp322 * sum_dt + _tmp323 * sum_dt + _tmp411 + _tmp412 + _tmp413;
    _hessian(13, 7) =
        _tmp324 * sum_dt + _tmp325 * sum_dt + _tmp326 * sum_dt + _tmp414 + _tmp415 + _tmp416;
    _hessian(14, 7) =
        _tmp327 * sum_dt + _tmp328 * sum_dt + _tmp329 * sum_dt + _tmp417 + _tmp418 + _tmp419;
    _hessian(15, 7) = _tmp400;
    _hessian(16, 7) = -_tmp305 - _tmp306 - _tmp307;
    _hessian(17, 7) = _tmp420;
    _hessian(21, 7) = _tmp289;
    _hessian(22, 7) = _tmp330;
    _hessian(23, 7) = _tmp331;
    _hessian(8, 8) = _tmp332 * _tmp5 + _tmp333 * _tmp5 + _tmp334 * _tmp5 + _tmp335;
    _hessian(9, 8) =
        _tmp345 * sum_dt + _tmp346 * sum_dt + _tmp347 * sum_dt + _tmp421 + _tmp422 + _tmp423;
    _hessian(10, 8) =
        _tmp348 * sum_dt + _tmp349 * sum_dt + _tmp350 * sum_dt + _tmp424 + _tmp425 + _tmp426;
    _hessian(11, 8) =
        _tmp351 * sum_dt + _tmp352 * sum_dt + _tmp353 * sum_dt + _tmp427 + _tmp428 + _tmp429;
    _hessian(12, 8) =
        _tmp354 * sum_dt + _tmp355 * sum_dt + _tmp356 * sum_dt + _tmp430 + _tmp431 + _tmp432;
    _hessian(13, 8) =
        _tmp357 * sum_dt + _tmp358 * sum_dt + _tmp359 * sum_dt + _tmp433 + _tmp434 + _tmp435;
    _hessian(14, 8) =
        _tmp360 * sum_dt + _tmp361 * sum_dt + _tmp362 * sum_dt + _tmp436 + _tmp437 + _tmp438;
    _hessian(15, 8) = _tmp401;
    _hessian(16, 8) = _tmp420;
    _hessian(17, 8) = -_tmp342 - _tmp343 - _tmp344;
    _hessian(21, 8) = _tmp290;
    _hessian(22, 8) = _tmp331;
    _hessian(23, 8) = _tmp363;
    _hessian(9, 9) = std::pow(dp_dba(0, 0), Scalar(2)) + std::pow(dp_dba(1, 0), Scalar(2)) +
                     std::pow(dp_dba(2, 0), Scalar(2)) + std::pow(dv_dba(0, 0), Scalar(2)) +
                     std::pow(dv_dba(1, 0), Scalar(2)) + std::pow(dv_dba(2, 0), Scalar(2)) + 1;
    _hessian(10, 9) = dp_dba(0, 0) * dp_dba(0, 1) + dp_dba(1, 0) * dp_dba(1, 1) +
                      dp_dba(2, 0) * dp_dba(2, 1) + dv_dba(0, 0) * dv_dba(0, 1) +
                      dv_dba(1, 0) * dv_dba(1, 1) + dv_dba(2, 0) * dv_dba(2, 1);
    _hessian(11, 9) = dp_dba(0, 0) * dp_dba(0, 2) + dp_dba(1, 0) * dp_dba(1, 2) +
                      dp_dba(2, 0) * dp_dba(2, 2) + dv_dba(0, 0) * dv_dba(0, 2) +
                      dv_dba(1, 0) * dv_dba(1, 2) + dv_dba(2, 0) * dv_dba(2, 2);
    _hessian(12, 9) = dp_dba(0, 0) * dp_dbg(0, 0) + dp_dba(1, 0) * dp_dbg(1, 0) +
                      dp_dba(2, 0) * dp_dbg(2, 0) + dv_dba(0, 0) * dv_dbg(0, 0) +
                      dv_dba(1, 0) * dv_dbg(1, 0) + dv_dba(2, 0) * dv_dbg(2, 0);
    _hessian(13, 9) = dp_dba(0, 0) * dp_dbg(0, 1) + dp_dba(1, 0) * dp_dbg(1, 1) +
                      dp_dba(2, 0) * dp_dbg(2, 1) + dv_dba(0, 0) * dv_dbg(0, 1) +
                      dv_dba(1, 0) * dv_dbg(1, 1) + dv_dba(2, 0) * dv_dbg(2, 1);
    _hessian(14, 9) = dp_dba(0, 0) * dp_dbg(0, 2) + dp_dba(1, 0) * dp_dbg(1, 2) +
                      dp_dba(2, 0) * dp_dbg(2, 2) + dv_dba(0, 0) * dv_dbg(0, 2) +
                      dv_dba(1, 0) * dv_dbg(1, 2) + dv_dba(2, 0) * dv_dbg(2, 2);
    _hessian(15, 9) = -_tmp270 - _tmp271 - _tmp272;
    _hessian(16, 9) = -_tmp312 - _tmp313 - _tmp314;
    _hessian(17, 9) = -_tmp345 - _tmp346 - _tmp347;
    _hessian(21, 9) = -_tmp382 - _tmp383 - _tmp384;
    _hessian(22, 9) = -_tmp402 - _tmp403 - _tmp404;
    _hessian(23, 9) = -_tmp421 - _tmp422 - _tmp423;
    _hessian(24, 9) = -1;
    _hessian(10, 10) = std::pow(dp_dba(0, 1), Scalar(2)) + std::pow(dp_dba(1, 1), Scalar(2)) +
                       std::pow(dp_dba(2, 1), Scalar(2)) + std::pow(dv_dba(0, 1), Scalar(2)) +
                       std::pow(dv_dba(1, 1), Scalar(2)) + std::pow(dv_dba(2, 1), Scalar(2)) + 1;
    _hessian(11, 10) = dp_dba(0, 1) * dp_dba(0, 2) + dp_dba(1, 1) * dp_dba(1, 2) +
                       dp_dba(2, 1) * dp_dba(2, 2) + dv_dba(0, 1) * dv_dba(0, 2) +
                       dv_dba(1, 1) * dv_dba(1, 2) + dv_dba(2, 1) * dv_dba(2, 2);
    _hessian(12, 10) = dp_dba(0, 1) * dp_dbg(0, 0) + dp_dba(1, 1) * dp_dbg(1, 0) +
                       dp_dba(2, 1) * dp_dbg(2, 0) + dv_dba(0, 1) * dv_dbg(0, 0) +
                       dv_dba(1, 1) * dv_dbg(1, 0) + dv_dba(2, 1) * dv_dbg(2, 0);
    _hessian(13, 10) = dp_dba(0, 1) * dp_dbg(0, 1) + dp_dba(1, 1) * dp_dbg(1, 1) +
                       dp_dba(2, 1) * dp_dbg(2, 1) + dv_dba(0, 1) * dv_dbg(0, 1) +
                       dv_dba(1, 1) * dv_dbg(1, 1) + dv_dba(2, 1) * dv_dbg(2, 1);
    _hessian(14, 10) = dp_dba(0, 1) * dp_dbg(0, 2) + dp_dba(1, 1) * dp_dbg(1, 2) +
                       dp_dba(2, 1) * dp_dbg(2, 2) + dv_dba(0, 1) * dv_dbg(0, 2) +
                       dv_dba(1, 1) * dv_dbg(1, 2) + dv_dba(2, 1) * dv_dbg(2, 2);
    _hessian(15, 10) = -_tmp273 - _tmp274 - _tmp275;
    _hessian(16, 10) = -_tmp315 - _tmp316 - _tmp317;
    _hessian(17, 10) = -_tmp348 - _tmp349 - _tmp350;
    _hessian(21, 10) = -_tmp385 - _tmp386 - _tmp387;
    _hessian(22, 10) = -_tmp405 - _tmp406 - _tmp407;
    _hessian(23, 10) = -_tmp424 - _tmp425 - _tmp426;
    _hessian(25, 10) = -1;
    _hessian(11, 11) = std::pow(dp_dba(0, 2), Scalar(2)) + std::pow(dp_dba(1, 2), Scalar(2)) +
                       std::pow(dp_dba(2, 2), Scalar(2)) + std::pow(dv_dba(0, 2), Scalar(2)) +
                       std::pow(dv_dba(1, 2), Scalar(2)) + std::pow(dv_dba(2, 2), Scalar(2)) + 1;
    _hessian(12, 11) = dp_dba(0, 2) * dp_dbg(0, 0) + dp_dba(1, 2) * dp_dbg(1, 0) +
                       dp_dba(2, 2) * dp_dbg(2, 0) + dv_dba(0, 2) * dv_dbg(0, 0) +
                       dv_dba(1, 2) * dv_dbg(1, 0) + dv_dba(2, 2) * dv_dbg(2, 0);
    _hessian(13, 11) = dp_dba(0, 2) * dp_dbg(0, 1) + dp_dba(1, 2) * dp_dbg(1, 1) +
                       dp_dba(2, 2) * dp_dbg(2, 1) + dv_dba(0, 2) * dv_dbg(0, 1) +
                       dv_dba(1, 2) * dv_dbg(1, 1) + dv_dba(2, 2) * dv_dbg(2, 1);
    _hessian(14, 11) = dp_dba(0, 2) * dp_dbg(0, 2) + dp_dba(1, 2) * dp_dbg(1, 2) +
                       dp_dba(2, 2) * dp_dbg(2, 2) + dv_dba(0, 2) * dv_dbg(0, 2) +
                       dv_dba(1, 2) * dv_dbg(1, 2) + dv_dba(2, 2) * dv_dbg(2, 2);
    _hessian(15, 11) = -_tmp276 - _tmp277 - _tmp278;
    _hessian(16, 11) = -_tmp318 - _tmp319 - _tmp320;
    _hessian(17, 11) = -_tmp351 - _tmp352 - _tmp353;
    _hessian(21, 11) = -_tmp388 - _tmp389 - _tmp390;
    _hessian(22, 11) = -_tmp408 - _tmp409 - _tmp410;
    _hessian(23, 11) = -_tmp427 - _tmp428 - _tmp429;
    _hessian(26, 11) = -1;
    _hessian(12, 12) = std::pow(_tmp209, Scalar(2)) + std::pow(_tmp210, Scalar(2)) +
                       std::pow(_tmp211, Scalar(2)) + std::pow(dp_dbg(0, 0), Scalar(2)) +
                       std::pow(dp_dbg(1, 0), Scalar(2)) + std::pow(dp_dbg(2, 0), Scalar(2)) +
                       std::pow(dv_dbg(0, 0), Scalar(2)) + std::pow(dv_dbg(1, 0), Scalar(2)) +
                       std::pow(dv_dbg(2, 0), Scalar(2)) + 1;
    _hessian(13, 12) = _tmp209 * _tmp216 + _tmp210 * _tmp217 + _tmp211 * _tmp218 +
                       dp_dbg(0, 0) * dp_dbg(0, 1) + dp_dbg(1, 0) * dp_dbg(1, 1) +
                       dp_dbg(2, 0) * dp_dbg(2, 1) + dv_dbg(0, 0) * dv_dbg(0, 1) +
                       dv_dbg(1, 0) * dv_dbg(1, 1) + dv_dbg(2, 0) * dv_dbg(2, 1);
    _hessian(14, 12) = _tmp209 * _tmp223 + _tmp210 * _tmp224 + _tmp211 * _tmp225 +
                       dp_dbg(0, 0) * dp_dbg(0, 2) + dp_dbg(1, 0) * dp_dbg(1, 2) +
                       dp_dbg(2, 0) * dp_dbg(2, 2) + dv_dbg(0, 0) * dv_dbg(0, 2) +
                       dv_dbg(1, 0) * dv_dbg(1, 2) + dv_dbg(2, 0) * dv_dbg(2, 2);
    _hessian(15, 12) = -_tmp279 - _tmp280 - _tmp281;
    _hessian(16, 12) = -_tmp321 - _tmp322 - _tmp323;
    _hessian(17, 12) = -_tmp354 - _tmp355 - _tmp356;
    _hessian(18, 12) = _tmp209 * _tmp229 + _tmp210 * _tmp231 + _tmp211 * _tmp233;
    _hessian(19, 12) = _tmp209 * _tmp234 + _tmp210 * _tmp235 + _tmp211 * _tmp237;
    _hessian(20, 12) = _tmp209 * _tmp238 + _tmp210 * _tmp239 + _tmp211 * _tmp240;
    _hessian(21, 12) = -_tmp391 - _tmp392 - _tmp393;
    _hessian(22, 12) = -_tmp411 - _tmp412 - _tmp413;
    _hessian(23, 12) = -_tmp430 - _tmp431 - _tmp432;
    _hessian(27, 12) = -1;
    _hessian(13, 13) = std::pow(_tmp216, Scalar(2)) + std::pow(_tmp217, Scalar(2)) +
                       std::pow(_tmp218, Scalar(2)) + std::pow(dp_dbg(0, 1), Scalar(2)) +
                       std::pow(dp_dbg(1, 1), Scalar(2)) + std::pow(dp_dbg(2, 1), Scalar(2)) +
                       std::pow(dv_dbg(0, 1), Scalar(2)) + std::pow(dv_dbg(1, 1), Scalar(2)) +
                       std::pow(dv_dbg(2, 1), Scalar(2)) + 1;
    _hessian(14, 13) = _tmp216 * _tmp223 + _tmp217 * _tmp224 + _tmp218 * _tmp225 +
                       dp_dbg(0, 1) * dp_dbg(0, 2) + dp_dbg(1, 1) * dp_dbg(1, 2) +
                       dp_dbg(2, 1) * dp_dbg(2, 2) + dv_dbg(0, 1) * dv_dbg(0, 2) +
                       dv_dbg(1, 1) * dv_dbg(1, 2) + dv_dbg(2, 1) * dv_dbg(2, 2);
    _hessian(15, 13) = -_tmp282 - _tmp283 - _tmp284;
    _hessian(16, 13) = -_tmp324 - _tmp325 - _tmp326;
    _hessian(17, 13) = -_tmp357 - _tmp358 - _tmp359;
    _hessian(18, 13) = _tmp216 * _tmp229 + _tmp217 * _tmp231 + _tmp218 * _tmp233;
    _hessian(19, 13) = _tmp216 * _tmp234 + _tmp217 * _tmp235 + _tmp218 * _tmp237;
    _hessian(20, 13) = _tmp216 * _tmp238 + _tmp217 * _tmp239 + _tmp218 * _tmp240;
    _hessian(21, 13) = -_tmp394 - _tmp395 - _tmp396;
    _hessian(22, 13) = -_tmp414 - _tmp415 - _tmp416;
    _hessian(23, 13) = -_tmp433 - _tmp434 - _tmp435;
    _hessian(28, 13) = -1;
    _hessian(14, 14) = std::pow(_tmp223, Scalar(2)) + std::pow(_tmp224, Scalar(2)) +
                       std::pow(_tmp225, Scalar(2)) + std::pow(dp_dbg(0, 2), Scalar(2)) +
                       std::pow(dp_dbg(1, 2), Scalar(2)) + std::pow(dp_dbg(2, 2), Scalar(2)) +
                       std::pow(dv_dbg(0, 2), Scalar(2)) + std::pow(dv_dbg(1, 2), Scalar(2)) +
                       std::pow(dv_dbg(2, 2), Scalar(2)) + 1;
    _hessian(15, 14) = -_tmp285 - _tmp286 - _tmp287;
    _hessian(16, 14) = -_tmp327 - _tmp328 - _tmp329;
    _hessian(17, 14) = -_tmp360 - _tmp361 - _tmp362;
    _hessian(18, 14) = _tmp223 * _tmp229 + _tmp224 * _tmp231 + _tmp225 * _tmp233;
    _hessian(19, 14) = _tmp223 * _tmp234 + _tmp224 * _tmp235 + _tmp225 * _tmp237;
    _hessian(20, 14) = _tmp223 * _tmp238 + _tmp224 * _tmp239 + _tmp225 * _tmp240;
    _hessian(21, 14) = -_tmp397 - _tmp398 - _tmp399;
    _hessian(22, 14) = -_tmp417 - _tmp418 - _tmp419;
    _hessian(23, 14) = -_tmp436 - _tmp437 - _tmp438;
    _hessian(29, 14) = -1;
    _hessian(15, 15) = _tmp244;
    _hessian(16, 15) = _tmp248;
    _hessian(17, 15) = _tmp252;
    _hessian(16, 16) = _tmp294;
    _hessian(17, 16) = _tmp298;
    _hessian(17, 17) = _tmp335;
    _hessian(18, 18) =
        std::pow(_tmp229, Scalar(2)) + std::pow(_tmp231, Scalar(2)) + std::pow(_tmp233, Scalar(2));
    _hessian(19, 18) = _tmp229 * _tmp234 + _tmp231 * _tmp235 + _tmp233 * _tmp237;
    _hessian(20, 18) = _tmp229 * _tmp238 + _tmp231 * _tmp239 + _tmp233 * _tmp240;
    _hessian(19, 19) =
        std::pow(_tmp234, Scalar(2)) + std::pow(_tmp235, Scalar(2)) + std::pow(_tmp237, Scalar(2));
    _hessian(20, 19) = _tmp234 * _tmp238 + _tmp235 * _tmp239 + _tmp237 * _tmp240;
    _hessian(20, 20) =
        std::pow(_tmp238, Scalar(2)) + std::pow(_tmp239, Scalar(2)) + std::pow(_tmp240, Scalar(2));
    _hessian(21, 21) = _tmp244;
    _hessian(22, 21) = _tmp248;
    _hessian(23, 21) = _tmp252;
    _hessian(22, 22) = _tmp294;
    _hessian(23, 22) = _tmp298;
    _hessian(23, 23) = _tmp335;
    _hessian(24, 24) = 1;
    _hessian(25, 25) = 1;
    _hessian(26, 26) = 1;
    _hessian(27, 27) = 1;
    _hessian(28, 28) = 1;
    _hessian(29, 29) = 1;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 30, 1>& _rhs = (*rhs);

    _rhs(0, 0) = -_tmp439 - _tmp440 - _tmp441;
    _rhs(1, 0) = -_tmp442 - _tmp443 - _tmp444;
    _rhs(2, 0) = -_tmp445 - _tmp446 - _tmp447;
    _rhs(3, 0) = _tmp101 * _tmp36 + _tmp110 * _tmp42 + _tmp140 * _tmp70 + _tmp145 * _tmp71 +
                 _tmp149 * _tmp72 + _tmp150 * _tmp79 + _tmp151 * _tmp81;
    _rhs(4, 0) = _tmp157 * _tmp26 + _tmp160 * _tmp42 + _tmp166 * _tmp70 + _tmp170 * _tmp71 +
                 _tmp175 * _tmp72 + _tmp176 * _tmp77 + _tmp177 * _tmp81;
    _rhs(5, 0) = _tmp180 * _tmp26 + _tmp184 * _tmp36 + _tmp188 * _tmp70 + _tmp190 * _tmp71 +
                 _tmp192 * _tmp72 + _tmp193 * _tmp77 + _tmp194 * _tmp79;
    _rhs(6, 0) =
        -_tmp439 * sum_dt - _tmp440 * sum_dt - _tmp441 * sum_dt - _tmp448 - _tmp449 - _tmp450;
    _rhs(7, 0) =
        -_tmp442 * sum_dt - _tmp443 * sum_dt - _tmp444 * sum_dt - _tmp451 - _tmp452 - _tmp453;
    _rhs(8, 0) =
        -_tmp445 * sum_dt - _tmp446 * sum_dt - _tmp447 * sum_dt - _tmp454 - _tmp455 - _tmp456;
    _rhs(9, 0) = -_tmp26 * dp_dba(0, 0) - _tmp36 * dp_dba(1, 0) - _tmp42 * dp_dba(2, 0) -
                 _tmp77 * dv_dba(0, 0) - _tmp79 * dv_dba(1, 0) - _tmp81 * dv_dba(2, 0) - _tmp82;
    _rhs(10, 0) = -_tmp26 * dp_dba(0, 1) - _tmp36 * dp_dba(1, 1) - _tmp42 * dp_dba(2, 1) -
                  _tmp77 * dv_dba(0, 1) - _tmp79 * dv_dba(1, 1) - _tmp81 * dv_dba(2, 1) - _tmp83;
    _rhs(11, 0) = -_tmp26 * dp_dba(0, 2) - _tmp36 * dp_dba(1, 2) - _tmp42 * dp_dba(2, 2) -
                  _tmp77 * dv_dba(0, 2) - _tmp79 * dv_dba(1, 2) - _tmp81 * dv_dba(2, 2) - _tmp84;
    _rhs(12, 0) = _tmp209 * _tmp70 + _tmp210 * _tmp71 + _tmp211 * _tmp72 - _tmp26 * dp_dbg(0, 0) -
                  _tmp36 * dp_dbg(1, 0) - _tmp42 * dp_dbg(2, 0) - _tmp77 * dv_dbg(0, 0) -
                  _tmp79 * dv_dbg(1, 0) - _tmp81 * dv_dbg(2, 0) - _tmp85;
    _rhs(13, 0) = _tmp216 * _tmp70 + _tmp217 * _tmp71 + _tmp218 * _tmp72 - _tmp26 * dp_dbg(0, 1) -
                  _tmp36 * dp_dbg(1, 1) - _tmp42 * dp_dbg(2, 1) - _tmp77 * dv_dbg(0, 1) -
                  _tmp79 * dv_dbg(1, 1) - _tmp81 * dv_dbg(2, 1) - _tmp86;
    _rhs(14, 0) = _tmp223 * _tmp70 + _tmp224 * _tmp71 + _tmp225 * _tmp72 - _tmp26 * dp_dbg(0, 2) -
                  _tmp36 * dp_dbg(1, 2) - _tmp42 * dp_dbg(2, 2) - _tmp77 * dv_dbg(0, 2) -
                  _tmp79 * dv_dbg(1, 2) - _tmp81 * dv_dbg(2, 2) - _tmp87;
    _rhs(15, 0) = _tmp439 + _tmp440 + _tmp441;
    _rhs(16, 0) = _tmp442 + _tmp443 + _tmp444;
    _rhs(17, 0) = _tmp445 + _tmp446 + _tmp447;
    _rhs(18, 0) = _tmp229 * _tmp70 + _tmp231 * _tmp71 + _tmp233 * _tmp72;
    _rhs(19, 0) = _tmp234 * _tmp70 + _tmp235 * _tmp71 + _tmp237 * _tmp72;
    _rhs(20, 0) = _tmp238 * _tmp70 + _tmp239 * _tmp71 + _tmp240 * _tmp72;
    _rhs(21, 0) = _tmp448 + _tmp449 + _tmp450;
    _rhs(22, 0) = _tmp451 + _tmp452 + _tmp453;
    _rhs(23, 0) = _tmp454 + _tmp455 + _tmp456;
    _rhs(24, 0) = _tmp82;
    _rhs(25, 0) = _tmp83;
    _rhs(26, 0) = _tmp84;
    _rhs(27, 0) = _tmp85;
    _rhs(28, 0) = _tmp86;
    _rhs(29, 0) = _tmp87;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
